{
    "apps": [
        {
            "name": "Delete an installation",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/app/installations/:installation_id",
            "previews": [
                {
                    "name": "gambit",
                    "description": "**Note:** Uninstalling GitHub Apps using the REST API is currently available for developers to preview. To access the new endpoint during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.gambit-preview+json\n\n```",
                    "required": true
                },
                {
                    "name": "machine-man",
                    "description": "**Note:** To access the API with your GitHub App, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` Header for your requests.\n\n`application/vnd.github.machine-man-preview+json`",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "installation_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Uninstalls a GitHub App on a user, organization, or business account.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "delete-installation",
            "documentationUrl": "https://developer.github.com/v3/apps/#delete-an-installation"
        },
        {
            "name": "List all plans for your Marketplace listing",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/marketplace_listing/plans",
            "previews": [],
            "params": [
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "GitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "url": "https://api.github.com/marketplace_listing/plans/1313",
                            "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                            "id": 1313,
                            "number": 3,
                            "name": "Pro",
                            "description": "A professional-grade CI solution",
                            "monthly_price_in_cents": 1099,
                            "yearly_price_in_cents": 11870,
                            "price_model": "flat-rate",
                            "has_free_trial": true,
                            "unit_name": null,
                            "state": "published",
                            "bullets": [
                                "Up to 25 private repositories",
                                "11 concurrent builds"
                            ]
                        }
                    ]
                }
            ],
            "idName": "list-plans",
            "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#list-all-plans-for-your-marketplace-listing"
        },
        {
            "name": "List all plans for your Marketplace listing (stubbed)",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/marketplace_listing/stubbed/plans",
            "previews": [],
            "params": [
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "GitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "url": "https://api.github.com/marketplace_listing/plans/1313",
                            "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                            "id": 1313,
                            "number": 3,
                            "name": "Pro",
                            "description": "A professional-grade CI solution",
                            "monthly_price_in_cents": 1099,
                            "yearly_price_in_cents": 11870,
                            "price_model": "flat-rate",
                            "has_free_trial": true,
                            "unit_name": null,
                            "state": "published",
                            "bullets": [
                                "Up to 25 private repositories",
                                "11 concurrent builds"
                            ]
                        }
                    ]
                }
            ],
            "idName": "list-plans-stubbed",
            "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#list-all-plans-for-your-marketplace-listing"
        },
        {
            "name": "List all GitHub accounts (user or organization) on a specific plan",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/marketplace_listing/plans/:plan_id/accounts",
            "previews": [],
            "params": [
                {
                    "name": "plan_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "sort",
                    "type": "string",
                    "description": "Sorts the GitHub accounts by the date they were created or last updated. Can be one of `created` or `updated`.",
                    "default": "created",
                    "required": false,
                    "enum": [
                        "created",
                        "updated"
                    ],
                    "location": "query"
                },
                {
                    "name": "direction",
                    "type": "string",
                    "description": "To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter.",
                    "required": false,
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "location": "query"
                },
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "Returns any accounts associated with a plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "url": "https://api.github.com/orgs/github",
                            "type": "Organization",
                            "id": 4,
                            "login": "github",
                            "email": null,
                            "organization_billing_email": "billing@github.com",
                            "marketplace_pending_change": {
                                "effective_date": "2017-11-11T00:00:00Z",
                                "unit_count": null,
                                "id": 77,
                                "plan": {
                                    "url": "https://api.github.com/marketplace_listing/plans/1111",
                                    "accounts_url": "https://api.github.com/marketplace_listing/plans/1111/accounts",
                                    "id": 1111,
                                    "number": 2,
                                    "name": "Startup",
                                    "description": "A professional-grade CI solution",
                                    "monthly_price_in_cents": 699,
                                    "yearly_price_in_cents": 7870,
                                    "price_model": "flat-rate",
                                    "has_free_trial": true,
                                    "state": "published",
                                    "unit_name": null,
                                    "bullets": [
                                        "Up to 10 private repositories",
                                        "3 concurrent builds"
                                    ]
                                }
                            },
                            "marketplace_purchase": {
                                "billing_cycle": "monthly",
                                "next_billing_date": "2017-11-11T00:00:00Z",
                                "unit_count": null,
                                "on_free_trial": true,
                                "free_trial_ends_on": "2017-11-11T00:00:00Z",
                                "updated_at": "2017-11-02T01:12:12Z",
                                "plan": {
                                    "url": "https://api.github.com/marketplace_listing/plans/1313",
                                    "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                    "id": 1313,
                                    "number": 3,
                                    "name": "Pro",
                                    "description": "A professional-grade CI solution",
                                    "monthly_price_in_cents": 1099,
                                    "yearly_price_in_cents": 11870,
                                    "price_model": "flat-rate",
                                    "has_free_trial": true,
                                    "unit_name": null,
                                    "state": "published",
                                    "bullets": [
                                        "Up to 25 private repositories",
                                        "11 concurrent builds"
                                    ]
                                }
                            }
                        }
                    ]
                }
            ],
            "idName": "list-accounts-user-or-org-on-plan",
            "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#list-all-github-accounts-user-or-organization-on-a-specific-plan"
        },
        {
            "name": "List all GitHub accounts (user or organization) on a specific plan (stubbed)",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/marketplace_listing/stubbed/plans/:plan_id/accounts",
            "previews": [],
            "params": [
                {
                    "name": "plan_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "sort",
                    "type": "string",
                    "description": "Sorts the GitHub accounts by the date they were created or last updated. Can be one of `created` or `updated`.",
                    "default": "created",
                    "required": false,
                    "enum": [
                        "created",
                        "updated"
                    ],
                    "location": "query"
                },
                {
                    "name": "direction",
                    "type": "string",
                    "description": "To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter.",
                    "required": false,
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "location": "query"
                },
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "Returns any accounts associated with a plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "url": "https://api.github.com/orgs/github",
                            "type": "Organization",
                            "id": 4,
                            "login": "github",
                            "email": null,
                            "organization_billing_email": "billing@github.com",
                            "marketplace_pending_change": {
                                "effective_date": "2017-11-11T00:00:00Z",
                                "unit_count": null,
                                "id": 77,
                                "plan": {
                                    "url": "https://api.github.com/marketplace_listing/plans/1111",
                                    "accounts_url": "https://api.github.com/marketplace_listing/plans/1111/accounts",
                                    "id": 1111,
                                    "number": 2,
                                    "name": "Startup",
                                    "description": "A professional-grade CI solution",
                                    "monthly_price_in_cents": 699,
                                    "yearly_price_in_cents": 7870,
                                    "price_model": "flat-rate",
                                    "has_free_trial": true,
                                    "state": "published",
                                    "unit_name": null,
                                    "bullets": [
                                        "Up to 10 private repositories",
                                        "3 concurrent builds"
                                    ]
                                }
                            },
                            "marketplace_purchase": {
                                "billing_cycle": "monthly",
                                "next_billing_date": "2017-11-11T00:00:00Z",
                                "unit_count": null,
                                "on_free_trial": true,
                                "free_trial_ends_on": "2017-11-11T00:00:00Z",
                                "updated_at": "2017-11-02T01:12:12Z",
                                "plan": {
                                    "url": "https://api.github.com/marketplace_listing/plans/1313",
                                    "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                    "id": 1313,
                                    "number": 3,
                                    "name": "Pro",
                                    "description": "A professional-grade CI solution",
                                    "monthly_price_in_cents": 1099,
                                    "yearly_price_in_cents": 11870,
                                    "price_model": "flat-rate",
                                    "has_free_trial": true,
                                    "unit_name": null,
                                    "state": "published",
                                    "bullets": [
                                        "Up to 25 private repositories",
                                        "11 concurrent builds"
                                    ]
                                }
                            }
                        }
                    ]
                }
            ],
            "idName": "list-accounts-user-or-org-on-plan-stubbed",
            "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#list-all-github-accounts-user-or-organization-on-a-specific-plan"
        },
        {
            "name": "Check if a GitHub account is associated with any Marketplace listing",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/marketplace_listing/accounts/:account_id",
            "previews": [],
            "params": [
                {
                    "name": "account_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "url": "https://api.github.com/orgs/github",
                        "type": "Organization",
                        "id": 4,
                        "login": "github",
                        "email": null,
                        "organization_billing_email": "billing@github.com",
                        "marketplace_pending_change": {
                            "effective_date": "2017-11-11T00:00:00Z",
                            "unit_count": null,
                            "id": 77,
                            "plan": {
                                "url": "https://api.github.com/marketplace_listing/plans/1111",
                                "accounts_url": "https://api.github.com/marketplace_listing/plans/1111/accounts",
                                "id": 1111,
                                "number": 2,
                                "name": "Startup",
                                "description": "A professional-grade CI solution",
                                "monthly_price_in_cents": 699,
                                "yearly_price_in_cents": 7870,
                                "price_model": "flat-rate",
                                "has_free_trial": true,
                                "state": "published",
                                "unit_name": null,
                                "bullets": [
                                    "Up to 10 private repositories",
                                    "3 concurrent builds"
                                ]
                            }
                        },
                        "marketplace_purchase": {
                            "billing_cycle": "monthly",
                            "next_billing_date": "2017-11-11T00:00:00Z",
                            "unit_count": null,
                            "on_free_trial": true,
                            "free_trial_ends_on": "2017-11-11T00:00:00Z",
                            "updated_at": "2017-11-02T01:12:12Z",
                            "plan": {
                                "url": "https://api.github.com/marketplace_listing/plans/1313",
                                "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                "id": 1313,
                                "number": 3,
                                "name": "Pro",
                                "description": "A professional-grade CI solution",
                                "monthly_price_in_cents": 1099,
                                "yearly_price_in_cents": 11870,
                                "price_model": "flat-rate",
                                "has_free_trial": true,
                                "unit_name": null,
                                "state": "published",
                                "bullets": [
                                    "Up to 25 private repositories",
                                    "11 concurrent builds"
                                ]
                            }
                        }
                    }
                }
            ],
            "idName": "check-account-is-associated-with-any",
            "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#check-if-a-github-account-is-associated-with-any-marketplace-listing"
        },
        {
            "name": "Check if a GitHub account is associated with any Marketplace listing (stubbed)",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/marketplace_listing/stubbed/accounts/:account_id",
            "previews": [],
            "params": [
                {
                    "name": "account_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "url": "https://api.github.com/orgs/github",
                        "type": "Organization",
                        "id": 4,
                        "login": "github",
                        "email": null,
                        "organization_billing_email": "billing@github.com",
                        "marketplace_pending_change": {
                            "effective_date": "2017-11-11T00:00:00Z",
                            "unit_count": null,
                            "id": 77,
                            "plan": {
                                "url": "https://api.github.com/marketplace_listing/plans/1111",
                                "accounts_url": "https://api.github.com/marketplace_listing/plans/1111/accounts",
                                "id": 1111,
                                "number": 2,
                                "name": "Startup",
                                "description": "A professional-grade CI solution",
                                "monthly_price_in_cents": 699,
                                "yearly_price_in_cents": 7870,
                                "price_model": "flat-rate",
                                "has_free_trial": true,
                                "state": "published",
                                "unit_name": null,
                                "bullets": [
                                    "Up to 10 private repositories",
                                    "3 concurrent builds"
                                ]
                            }
                        },
                        "marketplace_purchase": {
                            "billing_cycle": "monthly",
                            "next_billing_date": "2017-11-11T00:00:00Z",
                            "unit_count": null,
                            "on_free_trial": true,
                            "free_trial_ends_on": "2017-11-11T00:00:00Z",
                            "updated_at": "2017-11-02T01:12:12Z",
                            "plan": {
                                "url": "https://api.github.com/marketplace_listing/plans/1313",
                                "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                "id": 1313,
                                "number": 3,
                                "name": "Pro",
                                "description": "A professional-grade CI solution",
                                "monthly_price_in_cents": 1099,
                                "yearly_price_in_cents": 11870,
                                "price_model": "flat-rate",
                                "has_free_trial": true,
                                "unit_name": null,
                                "state": "published",
                                "bullets": [
                                    "Up to 25 private repositories",
                                    "11 concurrent builds"
                                ]
                            }
                        }
                    }
                }
            ],
            "idName": "check-account-is-associated-with-any-stubbed",
            "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#check-if-a-github-account-is-associated-with-any-marketplace-listing"
        },
        {
            "name": "Get a user's Marketplace purchases",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/user/marketplace_purchases",
            "previews": [],
            "params": [
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "Returns only active subscriptions. You must use a [user-to-server OAuth access token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an [OAuth token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/).",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "billing_cycle": "monthly",
                            "next_billing_date": "2017-11-11T00:00:00Z",
                            "unit_count": null,
                            "on_free_trial": true,
                            "free_trial_ends_on": "2017-11-11T00:00:00Z",
                            "updated_at": "2017-11-02T01:12:12Z",
                            "account": {
                                "login": "github",
                                "id": 4,
                                "url": "https://api.github.com/orgs/github",
                                "email": null,
                                "organization_billing_email": "billing@github.com",
                                "type": "Organization"
                            },
                            "plan": {
                                "url": "https://api.github.com/marketplace_listing/plans/1313",
                                "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                "id": 1313,
                                "number": 3,
                                "name": "Pro",
                                "description": "A professional-grade CI solution",
                                "monthly_price_in_cents": 1099,
                                "yearly_price_in_cents": 11870,
                                "price_model": "flat-rate",
                                "has_free_trial": true,
                                "unit_name": null,
                                "state": "published",
                                "bullets": [
                                    "Up to 25 private repositories",
                                    "11 concurrent builds"
                                ]
                            }
                        }
                    ]
                }
            ],
            "idName": "list-marketplace-purchases-for-authenticated-user",
            "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#get-a-users-marketplace-purchases"
        },
        {
            "name": "Get a user's Marketplace purchases (stubbed)",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/user/marketplace_purchases/stubbed",
            "previews": [],
            "params": [
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "Returns only active subscriptions. You must use a [user-to-server OAuth access token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an [OAuth token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/).",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "billing_cycle": "monthly",
                            "next_billing_date": "2017-11-11T00:00:00Z",
                            "unit_count": null,
                            "on_free_trial": true,
                            "free_trial_ends_on": "2017-11-11T00:00:00Z",
                            "updated_at": "2017-11-02T01:12:12Z",
                            "account": {
                                "login": "github",
                                "id": 4,
                                "url": "https://api.github.com/orgs/github",
                                "email": null,
                                "organization_billing_email": "billing@github.com",
                                "type": "Organization"
                            },
                            "plan": {
                                "url": "https://api.github.com/marketplace_listing/plans/1313",
                                "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                "id": 1313,
                                "number": 3,
                                "name": "Pro",
                                "description": "A professional-grade CI solution",
                                "monthly_price_in_cents": 1099,
                                "yearly_price_in_cents": 11870,
                                "price_model": "flat-rate",
                                "has_free_trial": true,
                                "unit_name": null,
                                "state": "published",
                                "bullets": [
                                    "Up to 25 private repositories",
                                    "11 concurrent builds"
                                ]
                            }
                        }
                    ]
                }
            ],
            "idName": "list-marketplace-purchases-for-authenticated-user-stubbed",
            "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#get-a-users-marketplace-purchases"
        }
    ],
    "codesOfConduct": [
        {
            "name": "List all codes of conduct",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/codes_of_conduct",
            "previews": [
                {
                    "name": "scarlet-witch",
                    "description": "**Note:** The Codes of Conduct API is currently available for developers to preview.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.scarlet-witch-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "key": "citizen_code_of_conduct",
                            "name": "Citizen Code of Conduct",
                            "url": "https://api.github.com/codes_of_conduct/citizen_code_of_conduct"
                        },
                        {
                            "key": "contributor_covenant",
                            "name": "Contributor Covenant",
                            "url": "https://api.github.com/codes_of_conduct/contributor_covenant"
                        }
                    ]
                }
            ],
            "idName": "list-conduct-codes",
            "documentationUrl": "https://developer.github.com/v3/codes_of_conduct/#list-all-codes-of-conduct"
        },
        {
            "name": "Get an individual code of conduct",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/codes_of_conduct/:key",
            "previews": [
                {
                    "name": "scarlet-witch",
                    "description": "**Note:** The Codes of Conduct API is currently available for developers to preview.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.scarlet-witch-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "key",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "key": "contributor_covenant",
                        "name": "Contributor Covenant",
                        "url": "https://api.github.com/codes_of_conduct/contributor_covenant",
                        "body": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
                    }
                }
            ],
            "idName": "get-conduct-code",
            "documentationUrl": "https://developer.github.com/v3/codes_of_conduct/#get-an-individual-code-of-conduct"
        },
        {
            "name": "Get the contents of a repository's code of conduct",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/repos/:owner/:repo/community/code_of_conduct",
            "previews": [
                {
                    "name": "scarlet-witch",
                    "description": "**Note:** The Codes of Conduct API is currently available for developers to preview.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.scarlet-witch-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "This method returns the contents of the repository's code of conduct file, if one is detected.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "key": "contributor_covenant",
                        "name": "Contributor Covenant",
                        "url": "https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md",
                        "body": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include=>\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include=>\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\nto any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\nposting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at lindseyb@github.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
                    }
                }
            ],
            "idName": "get-for-repo",
            "documentationUrl": "https://developer.github.com/v3/codes_of_conduct/#get-the-contents-of-a-repositorys-code-of-conduct"
        }
    ],
    "interactions": [
        {
            "name": "Get interaction restrictions for an organization",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/orgs/:org/interaction-limits",
            "previews": [
                {
                    "name": "sombra",
                    "description": "**Note:** The Interactions API is currently in public preview. See the [blog post](https://developer.github.com/changes/2018-12-18-interactions-preview) preview for more details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sombra-preview\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Shows which group of GitHub users can interact with this organization and when the restriction expires. If there are no restrictions, you will see an empty response.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "limit": "collaborators_only",
                        "origin": "organization",
                        "expires_at": "2018-08-17T04:18:39Z"
                    }
                }
            ],
            "idName": "get-restrictions-for-org",
            "documentationUrl": "https://developer.github.com/v3/interactions/orgs/#get-interaction-restrictions-for-an-organization"
        },
        {
            "name": "Add or update interaction restrictions for an organization",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "PUT",
            "path": "/orgs/:org/interaction-limits",
            "previews": [
                {
                    "name": "sombra",
                    "description": "**Note:** The Interactions API is currently in public preview. See the [blog post](https://developer.github.com/changes/2018-12-18-interactions-preview) preview for more details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sombra-preview\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "limit",
                    "type": "string",
                    "description": "Specifies the group of GitHub users who can comment, open issues, or create pull requests in public repositories for the given organization. Must be one of: `existing_users`, `contributors_only`, or `collaborators_only`.",
                    "required": true,
                    "enum": [
                        "existing_users",
                        "contributors_only",
                        "collaborators_only"
                    ],
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "limit": "collaborators_only"
                }
            ],
            "description": "Temporarily restricts interactions to certain GitHub users in any public repository in the given organization. You must be an organization owner to set these restrictions.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "limit": "collaborators_only",
                        "origin": "organization",
                        "expires_at": "2018-08-17T04:18:39Z"
                    }
                }
            ],
            "idName": "add-or-update-restrictions-for-org",
            "documentationUrl": "https://developer.github.com/v3/interactions/orgs/#add-or-update-interaction-restrictions-for-an-organization"
        },
        {
            "name": "Remove interaction restrictions for an organization",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/orgs/:org/interaction-limits",
            "previews": [
                {
                    "name": "sombra",
                    "description": "**Note:** The Interactions API is currently in public preview. See the [blog post](https://developer.github.com/changes/2018-12-18-interactions-preview) preview for more details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sombra-preview\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Removes all interaction restrictions from public repositories in the given organization. You must be an organization owner to remove restrictions.",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "remove-restrictions-for-org",
            "documentationUrl": "https://developer.github.com/v3/interactions/orgs/#remove-interaction-restrictions-for-an-organization"
        },
        {
            "name": "Get interaction restrictions for a repository",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/repos/:owner/:repo/interaction-limits",
            "previews": [
                {
                    "name": "sombra",
                    "description": "**Note:** The Interactions API is currently in public preview. See the [blog post](https://developer.github.com/changes/2018-12-18-interactions-preview) preview for more details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sombra-preview\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Shows which group of GitHub users can interact with this repository and when the restriction expires. If there are no restrictions, you will see an empty response.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "limit": "collaborators_only",
                        "origin": "repository",
                        "expires_at": "2018-08-17T04:18:39Z"
                    }
                }
            ],
            "idName": "get-restrictions-for-repo",
            "documentationUrl": "https://developer.github.com/v3/interactions/repos/#get-interaction-restrictions-for-a-repository"
        },
        {
            "name": "Add or update interaction restrictions for a repository",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "PUT",
            "path": "/repos/:owner/:repo/interaction-limits",
            "previews": [
                {
                    "name": "sombra",
                    "description": "**Note:** The Interactions API is currently in public preview. See the [blog post](https://developer.github.com/changes/2018-12-18-interactions-preview) preview for more details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sombra-preview\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "limit",
                    "type": "string",
                    "description": "Specifies the group of GitHub users who can comment, open issues, or create pull requests for the given repository. Must be one of: `existing_users`, `contributors_only`, or `collaborators_only`.",
                    "required": true,
                    "enum": [
                        "existing_users",
                        "contributors_only",
                        "collaborators_only"
                    ],
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "limit": "collaborators_only"
                }
            ],
            "description": "Temporarily restricts interactions to certain GitHub users within the given repository. You must have owner or admin access to set restrictions.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "limit": "collaborators_only",
                        "origin": "repository",
                        "expires_at": "2018-08-17T04:18:39Z"
                    }
                }
            ],
            "idName": "add-or-update-restrictions-for-repo",
            "documentationUrl": "https://developer.github.com/v3/interactions/repos/#add-or-update-interaction-restrictions-for-a-repository"
        },
        {
            "name": "Remove interaction restrictions for a repository",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/repos/:owner/:repo/interaction-limits",
            "previews": [
                {
                    "name": "sombra",
                    "description": "**Note:** The Interactions API is currently in public preview. See the [blog post](https://developer.github.com/changes/2018-12-18-interactions-preview) preview for more details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.sombra-preview\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Removes all interaction restrictions from the given repository. You must have owner or admin access to remove restrictions.",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "remove-restrictions-for-repo",
            "documentationUrl": "https://developer.github.com/v3/interactions/repos/#remove-interaction-restrictions-for-a-repository"
        }
    ],
    "migrations": [
        {
            "name": "Start an organization migration",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "POST",
            "path": "/orgs/:org/migrations",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repositories",
                    "type": "string[]",
                    "description": "A list of arrays indicating which repositories should be migrated.",
                    "required": true,
                    "location": "body"
                },
                {
                    "name": "lock_repositories",
                    "type": "boolean",
                    "description": "Indicates whether repositories should be locked (to prevent manipulation) while migrating data.",
                    "default": false,
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "exclude_attachments",
                    "type": "boolean",
                    "description": "Indicates whether attachments should be excluded from the migration (to reduce migration archive file size).",
                    "default": false,
                    "required": false,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "repositories": [
                        "github/Hello-World"
                    ],
                    "lock_repositories": true
                }
            ],
            "description": "Initiates the generation of a migration archive.",
            "responses": [
                {
                    "headers": {
                        "status": "201 Created",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 79,
                        "owner": {
                            "login": "github",
                            "id": 1,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                            "url": "https://api.github.com/orgs/github",
                            "repos_url": "https://api.github.com/orgs/github/repos",
                            "events_url": "https://api.github.com/orgs/github/events",
                            "hooks_url": "https://api.github.com/orgs/github/hooks",
                            "issues_url": "https://api.github.com/orgs/github/issues",
                            "members_url": "https://api.github.com/orgs/github/members{/member}",
                            "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "description": "A great organization"
                        },
                        "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                        "state": "pending",
                        "lock_repositories": true,
                        "exclude_attachments": false,
                        "repositories": [
                            {
                                "id": 1296269,
                                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                "name": "Hello-World",
                                "full_name": "octocat/Hello-World",
                                "owner": {
                                    "login": "octocat",
                                    "id": 1,
                                    "node_id": "MDQ6VXNlcjE=",
                                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                    "gravatar_id": "",
                                    "url": "https://api.github.com/users/octocat",
                                    "html_url": "https://github.com/octocat",
                                    "followers_url": "https://api.github.com/users/octocat/followers",
                                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                                    "repos_url": "https://api.github.com/users/octocat/repos",
                                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                                    "type": "User",
                                    "site_admin": false
                                },
                                "private": false,
                                "html_url": "https://github.com/octocat/Hello-World",
                                "description": "This your first repo!",
                                "fork": false,
                                "url": "https://api.github.com/repos/octocat/Hello-World",
                                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                "git_url": "git:github.com/octocat/Hello-World.git",
                                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                "ssh_url": "git@github.com:octocat/Hello-World.git",
                                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                "clone_url": "https://github.com/octocat/Hello-World.git",
                                "mirror_url": "git:git.example.com/octocat/Hello-World",
                                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                "svn_url": "https://svn.github.com/octocat/Hello-World",
                                "homepage": "https://github.com",
                                "language": null,
                                "forks_count": 9,
                                "stargazers_count": 80,
                                "watchers_count": 80,
                                "size": 108,
                                "default_branch": "master",
                                "open_issues_count": 0,
                                "is_template": true,
                                "topics": [
                                    "octocat",
                                    "atom",
                                    "electron",
                                    "api"
                                ],
                                "has_issues": true,
                                "has_projects": true,
                                "has_wiki": true,
                                "has_pages": false,
                                "has_downloads": true,
                                "archived": false,
                                "disabled": false,
                                "pushed_at": "2011-01-26T19:06:43Z",
                                "created_at": "2011-01-26T19:01:12Z",
                                "updated_at": "2011-01-26T19:14:43Z",
                                "permissions": {
                                    "admin": false,
                                    "push": false,
                                    "pull": true
                                },
                                "allow_rebase_merge": true,
                                "template_repository": null,
                                "allow_squash_merge": true,
                                "allow_merge_commit": true,
                                "subscribers_count": 42,
                                "network_count": 0
                            }
                        ],
                        "url": "https://api.github.com/orgs/octo-org/migrations/79",
                        "created_at": "2015-07-06T15:33:38-07:00",
                        "updated_at": "2015-07-06T15:33:38-07:00"
                    }
                }
            ],
            "idName": "start-for-org",
            "documentationUrl": "https://developer.github.com/v3/migrations/orgs/#start-an-organization-migration"
        },
        {
            "name": "Get a list of organization migrations",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/orgs/:org/migrations",
            "previews": [
                {
                    "name": "wyandotte",
                    "description": "To access the Migrations API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "Lists the most recent migrations.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "id": 79,
                            "owner": {
                                "login": "github",
                                "id": 1,
                                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                                "url": "https://api.github.com/orgs/github",
                                "repos_url": "https://api.github.com/orgs/github/repos",
                                "events_url": "https://api.github.com/orgs/github/events",
                                "hooks_url": "https://api.github.com/orgs/github/hooks",
                                "issues_url": "https://api.github.com/orgs/github/issues",
                                "members_url": "https://api.github.com/orgs/github/members{/member}",
                                "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "description": "A great organization"
                            },
                            "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                            "state": "pending",
                            "lock_repositories": true,
                            "exclude_attachments": false,
                            "repositories": [
                                {
                                    "id": 1296269,
                                    "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                    "name": "Hello-World",
                                    "full_name": "octocat/Hello-World",
                                    "owner": {
                                        "login": "octocat",
                                        "id": 1,
                                        "node_id": "MDQ6VXNlcjE=",
                                        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                        "gravatar_id": "",
                                        "url": "https://api.github.com/users/octocat",
                                        "html_url": "https://github.com/octocat",
                                        "followers_url": "https://api.github.com/users/octocat/followers",
                                        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                        "organizations_url": "https://api.github.com/users/octocat/orgs",
                                        "repos_url": "https://api.github.com/users/octocat/repos",
                                        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                        "received_events_url": "https://api.github.com/users/octocat/received_events",
                                        "type": "User",
                                        "site_admin": false
                                    },
                                    "private": false,
                                    "html_url": "https://github.com/octocat/Hello-World",
                                    "description": "This your first repo!",
                                    "fork": false,
                                    "url": "https://api.github.com/repos/octocat/Hello-World",
                                    "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                    "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                    "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                    "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                    "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                    "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                    "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                    "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                    "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                    "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                    "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                    "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                    "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                                    "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                                    "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                    "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                    "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                    "git_url": "git:github.com/octocat/Hello-World.git",
                                    "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                    "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                    "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                    "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                    "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                    "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                                    "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                                    "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                    "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                    "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                    "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                    "ssh_url": "git@github.com:octocat/Hello-World.git",
                                    "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                    "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                    "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                    "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                    "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                                    "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                                    "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                    "clone_url": "https://github.com/octocat/Hello-World.git",
                                    "mirror_url": "git:git.example.com/octocat/Hello-World",
                                    "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                    "svn_url": "https://svn.github.com/octocat/Hello-World",
                                    "homepage": "https://github.com",
                                    "language": null,
                                    "forks_count": 9,
                                    "stargazers_count": 80,
                                    "watchers_count": 80,
                                    "size": 108,
                                    "default_branch": "master",
                                    "open_issues_count": 0,
                                    "is_template": true,
                                    "topics": [
                                        "octocat",
                                        "atom",
                                        "electron",
                                        "api"
                                    ],
                                    "has_issues": true,
                                    "has_projects": true,
                                    "has_wiki": true,
                                    "has_pages": false,
                                    "has_downloads": true,
                                    "archived": false,
                                    "disabled": false,
                                    "pushed_at": "2011-01-26T19:06:43Z",
                                    "created_at": "2011-01-26T19:01:12Z",
                                    "updated_at": "2011-01-26T19:14:43Z",
                                    "permissions": {
                                        "admin": false,
                                        "push": false,
                                        "pull": true
                                    },
                                    "allow_rebase_merge": true,
                                    "template_repository": null,
                                    "allow_squash_merge": true,
                                    "allow_merge_commit": true,
                                    "subscribers_count": 42,
                                    "network_count": 0
                                }
                            ],
                            "url": "https://api.github.com/orgs/octo-org/migrations/79",
                            "created_at": "2015-07-06T15:33:38-07:00",
                            "updated_at": "2015-07-06T15:33:38-07:00"
                        }
                    ]
                }
            ],
            "idName": "list-for-org",
            "documentationUrl": "https://developer.github.com/v3/migrations/orgs/#get-a-list-of-organization-migrations"
        },
        {
            "name": "Get the status of an organization migration",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/orgs/:org/migrations/:migration_id",
            "previews": [
                {
                    "name": "wyandotte",
                    "description": "To access the Migrations API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "migration_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Fetches the status of a migration.\n\nThe `state` of a migration can be one of the following values:\n\n*   `pending`, which means the migration hasn't started yet.\n*   `exporting`, which means the migration is in progress.\n*   `exported`, which means the migration finished successfully.\n*   `failed`, which means the migration failed.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 79,
                        "owner": {
                            "login": "github",
                            "id": 1,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                            "url": "https://api.github.com/orgs/github",
                            "repos_url": "https://api.github.com/orgs/github/repos",
                            "events_url": "https://api.github.com/orgs/github/events",
                            "hooks_url": "https://api.github.com/orgs/github/hooks",
                            "issues_url": "https://api.github.com/orgs/github/issues",
                            "members_url": "https://api.github.com/orgs/github/members{/member}",
                            "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "description": "A great organization"
                        },
                        "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                        "state": "exported",
                        "lock_repositories": true,
                        "exclude_attachments": false,
                        "repositories": [
                            {
                                "id": 1296269,
                                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                "name": "Hello-World",
                                "full_name": "octocat/Hello-World",
                                "owner": {
                                    "login": "octocat",
                                    "id": 1,
                                    "node_id": "MDQ6VXNlcjE=",
                                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                    "gravatar_id": "",
                                    "url": "https://api.github.com/users/octocat",
                                    "html_url": "https://github.com/octocat",
                                    "followers_url": "https://api.github.com/users/octocat/followers",
                                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                                    "repos_url": "https://api.github.com/users/octocat/repos",
                                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                                    "type": "User",
                                    "site_admin": false
                                },
                                "private": false,
                                "html_url": "https://github.com/octocat/Hello-World",
                                "description": "This your first repo!",
                                "fork": false,
                                "url": "https://api.github.com/repos/octocat/Hello-World",
                                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                "git_url": "git:github.com/octocat/Hello-World.git",
                                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                "ssh_url": "git@github.com:octocat/Hello-World.git",
                                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                "clone_url": "https://github.com/octocat/Hello-World.git",
                                "mirror_url": "git:git.example.com/octocat/Hello-World",
                                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                "svn_url": "https://svn.github.com/octocat/Hello-World",
                                "homepage": "https://github.com",
                                "language": null,
                                "forks_count": 9,
                                "stargazers_count": 80,
                                "watchers_count": 80,
                                "size": 108,
                                "default_branch": "master",
                                "open_issues_count": 0,
                                "is_template": true,
                                "topics": [
                                    "octocat",
                                    "atom",
                                    "electron",
                                    "api"
                                ],
                                "has_issues": true,
                                "has_projects": true,
                                "has_wiki": true,
                                "has_pages": false,
                                "has_downloads": true,
                                "archived": false,
                                "disabled": false,
                                "pushed_at": "2011-01-26T19:06:43Z",
                                "created_at": "2011-01-26T19:01:12Z",
                                "updated_at": "2011-01-26T19:14:43Z",
                                "permissions": {
                                    "admin": false,
                                    "push": false,
                                    "pull": true
                                },
                                "allow_rebase_merge": true,
                                "template_repository": null,
                                "allow_squash_merge": true,
                                "allow_merge_commit": true,
                                "subscribers_count": 42,
                                "network_count": 0
                            }
                        ],
                        "url": "https://api.github.com/orgs/octo-org/migrations/79",
                        "created_at": "2015-07-06T15:33:38-07:00",
                        "updated_at": "2015-07-06T15:33:38-07:00"
                    },
                    "description": "*   `pending`, which means the migration hasn't started yet.\n*   `exporting`, which means the migration is in progress.\n*   `exported`, which means the migration finished successfully.\n*   `failed`, which means the migration failed."
                }
            ],
            "idName": "get-status-for-org",
            "documentationUrl": "https://developer.github.com/v3/migrations/orgs/#get-the-status-of-an-organization-migration"
        },
        {
            "name": "Download an organization migration archive",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/orgs/:org/migrations/:migration_id/archive",
            "previews": [
                {
                    "name": "wyandotte",
                    "description": "To access the Migrations API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "migration_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Fetches the URL to a migration archive.\n\n",
            "responses": [
                {
                    "headers": {
                        "status": "302 Found",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "get-archive-for-org",
            "documentationUrl": "https://developer.github.com/v3/migrations/orgs/#download-an-organization-migration-archive"
        },
        {
            "name": "Delete an organization migration archive",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/orgs/:org/migrations/:migration_id/archive",
            "previews": [
                {
                    "name": "wyandotte",
                    "description": "To access the Migrations API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "migration_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Deletes a previous migration archive. Migration archives are automatically deleted after seven days.",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "delete-archive-for-org",
            "documentationUrl": "https://developer.github.com/v3/migrations/orgs/#delete-an-organization-migration-archive"
        },
        {
            "name": "Unlock an organization repository",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/orgs/:org/migrations/:migration_id/repos/:repo_name/lock",
            "previews": [
                {
                    "name": "wyandotte",
                    "description": "To access the Migrations API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "migration_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo_name",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Unlocks a repository that was locked for migration. You should unlock each migrated repository and [delete them](https://developer.github.com/v3/repos/#delete-a-repository) when the migration is complete and you no longer need the source data.",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "unlock-repo-for-org",
            "documentationUrl": "https://developer.github.com/v3/migrations/orgs/#unlock-an-organization-repository"
        },
        {
            "name": "Start an import",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "PUT",
            "path": "/repos/:owner/:repo/import",
            "previews": [
                {
                    "name": "barred-rock",
                    "description": "The source import APIs are currently in public preview. See the [source import](https://developer.github.com/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "vcs_url",
                    "type": "string",
                    "description": "The URL of the originating repository.",
                    "required": true,
                    "location": "body"
                },
                {
                    "name": "vcs",
                    "type": "string",
                    "description": "The originating VCS type. Can be one of `subversion`, `git`, `mercurial`, or `tfvc`. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response.",
                    "required": false,
                    "enum": [
                        "subversion",
                        "git",
                        "mercurial",
                        "tfvc"
                    ],
                    "location": "body"
                },
                {
                    "name": "vcs_username",
                    "type": "string",
                    "description": "If authentication is required, the username to provide to `vcs_url`.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "vcs_password",
                    "type": "string",
                    "description": "If authentication is required, the password to provide to `vcs_url`.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "tfvc_project",
                    "type": "string",
                    "description": "For a tfvc import, the name of the project that is being imported.",
                    "required": false,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "vcs": "subversion",
                    "vcs_url": "http://svn.mycompany.com/svn/myproject",
                    "vcs_username": "octocat",
                    "vcs_password": "secret"
                }
            ],
            "description": "Start a source import to a GitHub repository using GitHub Importer.",
            "responses": [
                {
                    "headers": {
                        "status": "201 Created",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "vcs": "subversion",
                        "use_lfs": "undecided",
                        "vcs_url": "http://svn.mycompany.com/svn/myproject",
                        "status": "importing",
                        "status_text": "Importing...",
                        "has_large_files": false,
                        "large_files_size": 0,
                        "large_files_count": 0,
                        "authors_count": 0,
                        "percent": 42,
                        "commit_count": 1042,
                        "url": "https://api.github.com/repos/octocat/socm/import",
                        "html_url": "https://import.github.com/octocat/socm/import",
                        "authors_url": "https://api.github.com/repos/octocat/socm/import/authors",
                        "repository_url": "https://api.github.com/repos/octocat/socm"
                    }
                }
            ],
            "idName": "start-import",
            "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#start-an-import"
        },
        {
            "name": "Get import progress",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/repos/:owner/:repo/import",
            "previews": [
                {
                    "name": "barred-rock",
                    "description": "The source import APIs are currently in public preview. See the [source import](https://developer.github.com/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "requests": [
                [
                    {
                        "vcs": "tfvc",
                        "tfvc_project": "project0",
                        "human_name": "project0 (tfs)"
                    },
                    {
                        "vcs": "tfvc",
                        "tfvc_project": "project1",
                        "human_name": "project1 (tfs)"
                    },
                    {
                        "vcs": "tfvc",
                        "tfvc_project": "project2",
                        "human_name": "project2 (tfs)"
                    },
                    {
                        "vcs": "tfvc",
                        "tfvc_project": "project3",
                        "human_name": "project3 (tfs)"
                    }
                ]
            ],
            "description": "View the progress of an import.\n\n**Import status**\n\nThis section includes details about the possible values of the `status` field of the Import Progress response.\n\nAn import that does not have errors will progress through these steps:\n\n*   `detecting` - the \"detection\" step of the import is in progress because the request did not include a `vcs` parameter. The import is identifying the type of source control present at the URL.\n*   `importing` - the \"raw\" step of the import is in progress. This is where commit data is fetched from the original repository. The import progress response will include `commit_count` (the total number of raw commits that will be imported) and `percent` (0 - 100, the current progress through the import).\n*   `mapping` - the \"rewrite\" step of the import is in progress. This is where SVN branches are converted to Git branches, and where author updates are applied. The import progress response does not include progress information.\n*   `pushing` - the \"push\" step of the import is in progress. This is where the importer updates the repository on GitHub. The import progress response will include `push_percent`, which is the percent value reported by `git push` when it is \"Writing objects\".\n*   `complete` - the import is complete, and the repository is ready on GitHub.\n\nIf there are problems, you will see one of these in the `status` field:\n\n*   `auth_failed` - the import requires authentication in order to connect to the original repository. To update authentication for the import, please see the [Update Existing Import](https://developer.github.com/v3/migrations/source_imports/#update-existing-import) section.\n*   `error` - the import encountered an error. The import progress response will include the `failed_step` and an error message. Contact [GitHub Support](https://github.com/contact) for more information.\n*   `detection_needs_auth` - the importer requires authentication for the originating repository to continue detection. To update authentication for the import, please see the [Update Existing Import](https://developer.github.com/v3/migrations/source_imports/#update-existing-import) section.\n*   `detection_found_nothing` - the importer didn't recognize any source control at the URL. To resolve, [Cancel the import](https://developer.github.com/v3/migrations/source_imports/#cancel-an-import) and [retry](https://developer.github.com/v3/migrations/source_imports/#start-an-import) with the correct URL.\n*   `detection_found_multiple` - the importer found several projects or repositories at the provided URL. When this is the case, the Import Progress response will also include a `project_choices` field with the possible project choices as values. To update project choice, please see the [Update Existing Import](https://developer.github.com/v3/migrations/source_imports/#update-existing-import) section.\n\n**The project_choices field**\n\nWhen multiple projects are found at the provided URL, the response hash will include a `project_choices` field, the value of which is an array of hashes each representing a project choice. The exact key/value pairs of the project hashes will differ depending on the version control type.\n\n**Git LFS related fields**\n\nThis section includes details about Git LFS related fields that may be present in the Import Progress response.\n\n*   `use_lfs` - describes whether the import has been opted in or out of using Git LFS. The value can be `opt_in`, `opt_out`, or `undecided` if no action has been taken.\n*   `has_large_files` - the boolean value describing whether files larger than 100MB were found during the `importing` step.\n*   `large_files_size` - the total size in gigabytes of files larger than 100MB found in the originating repository.\n*   `large_files_count` - the total number of files larger than 100MB found in the originating repository. To see a list of these files, make a \"Get Large Files\" request.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "vcs": "subversion",
                        "use_lfs": "opt_in",
                        "vcs_url": "http://svn.mycompany.com/svn/myproject",
                        "status": "complete",
                        "status_text": "Done",
                        "has_large_files": true,
                        "large_files_size": 132331036,
                        "large_files_count": 1,
                        "authors_count": 4,
                        "url": "https://api.github.com/repos/octocat/socm/import",
                        "html_url": "https://import.github.com/octocat/socm/import",
                        "authors_url": "https://api.github.com/repos/octocat/socm/import/authors",
                        "repository_url": "https://api.github.com/repos/octocat/socm"
                    }
                }
            ],
            "idName": "get-import-progress",
            "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#get-import-progress"
        },
        {
            "name": "Update existing import",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "PATCH",
            "path": "/repos/:owner/:repo/import",
            "previews": [
                {
                    "name": "barred-rock",
                    "description": "The source import APIs are currently in public preview. See the [source import](https://developer.github.com/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "vcs_username",
                    "type": "string",
                    "description": "The username to provide to the originating repository.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "vcs_password",
                    "type": "string",
                    "description": "The password to provide to the originating repository.",
                    "required": false,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "vcs_username": "octocat",
                    "vcs_password": "secret"
                }
            ],
            "description": "An import can be updated with credentials or a project choice by passing in the appropriate parameters in this API request. If no parameters are provided, the import will be restarted.\n\nSome servers (e.g. TFS servers) can have several projects at a single URL. In those cases the import progress will have the status `detection_found_multiple` and the Import Progress response will include a `project_choices` array. You can select the project to import by providing one of the objects in the `project_choices` array in the update request.\n\nThe following example demonstrates the workflow for updating an import with \"project1\" as the project choice. Given a `project_choices` array like such:\n\nTo restart an import, no parameters are provided in the update request.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "vcs": "subversion",
                        "use_lfs": "undecided",
                        "vcs_url": "http://svn.mycompany.com/svn/myproject",
                        "status": "detecting",
                        "url": "https://api.github.com/repos/octocat/socm/import",
                        "html_url": "https://import.github.com/octocat/socm/import",
                        "authors_url": "https://api.github.com/repos/octocat/socm/import/authors",
                        "repository_url": "https://api.github.com/repos/octocat/socm"
                    }
                }
            ],
            "idName": "update-import",
            "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#update-existing-import"
        },
        {
            "name": "Get commit authors",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/repos/:owner/:repo/import/authors",
            "previews": [
                {
                    "name": "barred-rock",
                    "description": "The source import APIs are currently in public preview. See the [source import](https://developer.github.com/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "since",
                    "type": "string",
                    "description": "Only authors found after this id are returned. Provide the highest author ID you've seen so far. New authors may be added to the list at any point while the importer is performing the `raw` step.",
                    "required": false,
                    "location": "query"
                }
            ],
            "description": "Each type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username `hubot` into something like `hubot <hubot@12341234-abab-fefe-8787-fedcba987654>`.\n\nThis API method and the \"Map a commit author\" method allow you to provide correct Git author information.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "id": 2268557,
                            "remote_id": "nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                            "remote_name": "nobody",
                            "email": "hubot@github.com",
                            "name": "Hubot",
                            "url": "https://api.github.com/repos/octocat/socm/import/authors/2268557",
                            "import_url": "https://api.github.com/repos/octocat/socm/import"
                        },
                        {
                            "id": 2268558,
                            "remote_id": "svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                            "remote_name": "svner",
                            "email": "svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                            "name": "svner",
                            "url": "https://api.github.com/repos/octocat/socm/import/authors/2268558",
                            "import_url": "https://api.github.com/repos/octocat/socm/import"
                        },
                        {
                            "id": 2268559,
                            "remote_id": "svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                            "remote_name": "svner@example.com",
                            "email": "svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                            "name": "svner@example.com",
                            "url": "https://api.github.com/repos/octocat/socm/import/authors/2268559",
                            "import_url": "https://api.github.com/repos/octocat/socm/import"
                        }
                    ]
                }
            ],
            "idName": "get-commit-authors",
            "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#get-commit-authors"
        },
        {
            "name": "Map a commit author",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "PATCH",
            "path": "/repos/:owner/:repo/import/authors/:author_id",
            "previews": [
                {
                    "name": "barred-rock",
                    "description": "The source import APIs are currently in public preview. See the [source import](https://developer.github.com/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "author_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "email",
                    "type": "string",
                    "description": "The new Git author email.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "The new Git author name.",
                    "required": false,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "email": "hubot@github.com",
                    "name": "Hubot the Robot"
                }
            ],
            "description": "Update an author's identity for the import. Your application can continue updating authors any time before you push new commits to the repository.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 2268557,
                        "remote_id": "nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                        "remote_name": "nobody",
                        "email": "hubot@github.com",
                        "name": "Hubot",
                        "url": "https://api.github.com/repos/octocat/socm/import/authors/2268557",
                        "import_url": "https://api.github.com/repos/octocat/socm/import"
                    }
                }
            ],
            "idName": "map-commit-author",
            "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#map-a-commit-author"
        },
        {
            "name": "Set Git LFS preference",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "PATCH",
            "path": "/repos/:owner/:repo/import/lfs",
            "previews": [
                {
                    "name": "barred-rock",
                    "description": "The source import APIs are currently in public preview. See the [source import](https://developer.github.com/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "use_lfs",
                    "type": "string",
                    "description": "Can be one of `opt_in` (large files will be stored using Git LFS) or `opt_out` (large files will be removed during the import).",
                    "required": true,
                    "enum": [
                        "opt_in",
                        "opt_out"
                    ],
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "use_lfs": "opt_in"
                }
            ],
            "description": "You can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability is powered by [Git LFS](https://git-lfs.github.com). You can learn more about our LFS feature and working with large files [on our help site](https://help.github.com/articles/versioning-large-files/).",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "vcs": "subversion",
                        "use_lfs": "opt_in",
                        "vcs_url": "http://svn.mycompany.com/svn/myproject",
                        "status": "complete",
                        "status_text": "Done",
                        "has_large_files": true,
                        "large_files_size": 132331036,
                        "large_files_count": 1,
                        "authors_count": 4,
                        "url": "https://api.github.com/repos/octocat/socm/import",
                        "html_url": "https://import.github.com/octocat/socm/import",
                        "authors_url": "https://api.github.com/repos/octocat/socm/import/authors",
                        "repository_url": "https://api.github.com/repos/octocat/socm"
                    }
                }
            ],
            "idName": "set-lfs-preference",
            "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#set-git-lfs-preference"
        },
        {
            "name": "Get large files",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/repos/:owner/:repo/import/large_files",
            "previews": [
                {
                    "name": "barred-rock",
                    "description": "The source import APIs are currently in public preview. See the [source import](https://developer.github.com/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "List files larger than 100MB found during the import",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "ref_name": "refs/heads/master",
                            "path": "foo/bar/1",
                            "oid": "d3d9446802a44259755d38e6d163e820",
                            "size": 10485760
                        },
                        {
                            "ref_name": "refs/heads/master",
                            "path": "foo/bar/2",
                            "oid": "6512bd43d9caa6e02c990b0a82652dca",
                            "size": 11534336
                        },
                        {
                            "ref_name": "refs/heads/master",
                            "path": "foo/bar/3",
                            "oid": "c20ad4d76fe97759aa27a0c99bff6710",
                            "size": 12582912
                        }
                    ]
                }
            ],
            "idName": "get-large-files",
            "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#get-large-files"
        },
        {
            "name": "Cancel an import",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/repos/:owner/:repo/import",
            "previews": [
                {
                    "name": "barred-rock",
                    "description": "The source import APIs are currently in public preview. See the [source import](https://developer.github.com/v3/previews/#source-import) preview for more details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.barred-rock-preview\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Stop an import for a repository.",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "cancel-import",
            "documentationUrl": "https://developer.github.com/v3/migrations/source_imports/#cancel-an-import"
        },
        {
            "name": "Start a user migration",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "POST",
            "path": "/user/migrations",
            "previews": [],
            "params": [
                {
                    "name": "repositories",
                    "type": "string[]",
                    "description": "An array of repositories to include in the migration.",
                    "required": true,
                    "location": "body"
                },
                {
                    "name": "lock_repositories",
                    "type": "boolean",
                    "description": "Locks the `repositories` to prevent changes during the migration when set to `true`.",
                    "default": false,
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "exclude_attachments",
                    "type": "boolean",
                    "description": "Does not include attachments uploaded to GitHub.com in the migration data when set to `true`. Excluding attachments will reduce the migration archive file size.",
                    "default": false,
                    "required": false,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "repositories": [
                        "octocat/Hello-World"
                    ],
                    "lock_repositories": true
                }
            ],
            "description": "Initiates the generation of a user migration archive.",
            "responses": [
                {
                    "headers": {
                        "status": "201 Created",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 79,
                        "owner": {
                            "login": "octocat",
                            "id": 1,
                            "node_id": "MDQ6VXNlcjE=",
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/octocat",
                            "html_url": "https://github.com/octocat",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                        "state": "pending",
                        "lock_repositories": true,
                        "exclude_attachments": false,
                        "repositories": [
                            {
                                "id": 1296269,
                                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                "name": "Hello-World",
                                "full_name": "octocat/Hello-World",
                                "owner": {
                                    "login": "octocat",
                                    "id": 1,
                                    "node_id": "MDQ6VXNlcjE=",
                                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                    "gravatar_id": "",
                                    "url": "https://api.github.com/users/octocat",
                                    "html_url": "https://github.com/octocat",
                                    "followers_url": "https://api.github.com/users/octocat/followers",
                                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                                    "repos_url": "https://api.github.com/users/octocat/repos",
                                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                                    "type": "User",
                                    "site_admin": false
                                },
                                "private": false,
                                "html_url": "https://github.com/octocat/Hello-World",
                                "description": "This your first repo!",
                                "fork": false,
                                "url": "https://api.github.com/repos/octocat/Hello-World",
                                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                "git_url": "git:github.com/octocat/Hello-World.git",
                                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                "ssh_url": "git@github.com:octocat/Hello-World.git",
                                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                "clone_url": "https://github.com/octocat/Hello-World.git",
                                "mirror_url": "git:git.example.com/octocat/Hello-World",
                                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                "svn_url": "https://svn.github.com/octocat/Hello-World",
                                "homepage": "https://github.com",
                                "language": null,
                                "forks_count": 9,
                                "stargazers_count": 80,
                                "watchers_count": 80,
                                "size": 108,
                                "default_branch": "master",
                                "open_issues_count": 0,
                                "is_template": true,
                                "topics": [
                                    "octocat",
                                    "atom",
                                    "electron",
                                    "api"
                                ],
                                "has_issues": true,
                                "has_projects": true,
                                "has_wiki": true,
                                "has_pages": false,
                                "has_downloads": true,
                                "archived": false,
                                "disabled": false,
                                "pushed_at": "2011-01-26T19:06:43Z",
                                "created_at": "2011-01-26T19:01:12Z",
                                "updated_at": "2011-01-26T19:14:43Z",
                                "permissions": {
                                    "admin": false,
                                    "push": false,
                                    "pull": true
                                },
                                "allow_rebase_merge": true,
                                "template_repository": null,
                                "allow_squash_merge": true,
                                "allow_merge_commit": true,
                                "subscribers_count": 42,
                                "network_count": 0
                            }
                        ],
                        "url": "https://api.github.com/orgs/octo-org/migrations/79",
                        "created_at": "2015-07-06T15:33:38-07:00",
                        "updated_at": "2015-07-06T15:33:38-07:00"
                    }
                }
            ],
            "idName": "start-for-authenticated-user",
            "documentationUrl": "https://developer.github.com/v3/migrations/users/#start-a-user-migration"
        },
        {
            "name": "Get a list of user migrations",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/user/migrations",
            "previews": [
                {
                    "name": "wyandotte",
                    "description": "To access the Migrations API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "Lists all migrations a user has started.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "id": 79,
                            "owner": {
                                "login": "octocat",
                                "id": 1,
                                "node_id": "MDQ6VXNlcjE=",
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "gravatar_id": "",
                                "url": "https://api.github.com/users/octocat",
                                "html_url": "https://github.com/octocat",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "type": "User",
                                "site_admin": false
                            },
                            "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                            "state": "pending",
                            "lock_repositories": true,
                            "exclude_attachments": false,
                            "repositories": [
                                {
                                    "id": 1296269,
                                    "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                    "name": "Hello-World",
                                    "full_name": "octocat/Hello-World",
                                    "owner": {
                                        "login": "octocat",
                                        "id": 1,
                                        "node_id": "MDQ6VXNlcjE=",
                                        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                        "gravatar_id": "",
                                        "url": "https://api.github.com/users/octocat",
                                        "html_url": "https://github.com/octocat",
                                        "followers_url": "https://api.github.com/users/octocat/followers",
                                        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                        "organizations_url": "https://api.github.com/users/octocat/orgs",
                                        "repos_url": "https://api.github.com/users/octocat/repos",
                                        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                        "received_events_url": "https://api.github.com/users/octocat/received_events",
                                        "type": "User",
                                        "site_admin": false
                                    },
                                    "private": false,
                                    "html_url": "https://github.com/octocat/Hello-World",
                                    "description": "This your first repo!",
                                    "fork": false,
                                    "url": "https://api.github.com/repos/octocat/Hello-World",
                                    "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                    "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                    "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                    "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                    "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                    "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                    "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                    "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                    "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                    "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                    "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                    "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                    "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                                    "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                                    "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                    "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                    "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                    "git_url": "git:github.com/octocat/Hello-World.git",
                                    "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                    "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                    "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                    "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                    "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                    "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                                    "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                                    "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                    "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                    "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                    "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                    "ssh_url": "git@github.com:octocat/Hello-World.git",
                                    "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                    "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                    "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                    "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                    "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                                    "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                                    "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                    "clone_url": "https://github.com/octocat/Hello-World.git",
                                    "mirror_url": "git:git.example.com/octocat/Hello-World",
                                    "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                    "svn_url": "https://svn.github.com/octocat/Hello-World",
                                    "homepage": "https://github.com",
                                    "language": null,
                                    "forks_count": 9,
                                    "stargazers_count": 80,
                                    "watchers_count": 80,
                                    "size": 108,
                                    "default_branch": "master",
                                    "open_issues_count": 0,
                                    "is_template": true,
                                    "topics": [
                                        "octocat",
                                        "atom",
                                        "electron",
                                        "api"
                                    ],
                                    "has_issues": true,
                                    "has_projects": true,
                                    "has_wiki": true,
                                    "has_pages": false,
                                    "has_downloads": true,
                                    "archived": false,
                                    "disabled": false,
                                    "pushed_at": "2011-01-26T19:06:43Z",
                                    "created_at": "2011-01-26T19:01:12Z",
                                    "updated_at": "2011-01-26T19:14:43Z",
                                    "permissions": {
                                        "admin": false,
                                        "push": false,
                                        "pull": true
                                    },
                                    "allow_rebase_merge": true,
                                    "template_repository": null,
                                    "allow_squash_merge": true,
                                    "allow_merge_commit": true,
                                    "subscribers_count": 42,
                                    "network_count": 0
                                }
                            ],
                            "url": "https://api.github.com/orgs/octo-org/migrations/79",
                            "created_at": "2015-07-06T15:33:38-07:00",
                            "updated_at": "2015-07-06T15:33:38-07:00"
                        }
                    ]
                }
            ],
            "idName": "list-for-authenticated-user",
            "documentationUrl": "https://developer.github.com/v3/migrations/users/#get-a-list-of-user-migrations"
        },
        {
            "name": "Get the status of a user migration",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/user/migrations/:migration_id",
            "previews": [
                {
                    "name": "wyandotte",
                    "description": "To access the Migrations API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "migration_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Fetches a single user migration. The response includes the `state` of the migration, which can be one of the following values:\n\n*   `pending` - the migration hasn't started yet.\n*   `exporting` - the migration is in progress.\n*   `exported` - the migration finished successfully.\n*   `failed` - the migration failed.\n\nOnce the migration has been `exported` you can [download the migration archive](https://developer.github.com/v3/migrations/users/#download-a-user-migration-archive).",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 79,
                        "owner": {
                            "login": "octocat",
                            "id": 1,
                            "node_id": "MDQ6VXNlcjE=",
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/octocat",
                            "html_url": "https://github.com/octocat",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                        "state": "exported",
                        "lock_repositories": true,
                        "exclude_attachments": false,
                        "repositories": [
                            {
                                "id": 1296269,
                                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                "name": "Hello-World",
                                "full_name": "octocat/Hello-World",
                                "owner": {
                                    "login": "octocat",
                                    "id": 1,
                                    "node_id": "MDQ6VXNlcjE=",
                                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                    "gravatar_id": "",
                                    "url": "https://api.github.com/users/octocat",
                                    "html_url": "https://github.com/octocat",
                                    "followers_url": "https://api.github.com/users/octocat/followers",
                                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                                    "repos_url": "https://api.github.com/users/octocat/repos",
                                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                                    "type": "User",
                                    "site_admin": false
                                },
                                "private": false,
                                "html_url": "https://github.com/octocat/Hello-World",
                                "description": "This your first repo!",
                                "fork": false,
                                "url": "https://api.github.com/repos/octocat/Hello-World",
                                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                "git_url": "git:github.com/octocat/Hello-World.git",
                                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                "ssh_url": "git@github.com:octocat/Hello-World.git",
                                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                "clone_url": "https://github.com/octocat/Hello-World.git",
                                "mirror_url": "git:git.example.com/octocat/Hello-World",
                                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                "svn_url": "https://svn.github.com/octocat/Hello-World",
                                "homepage": "https://github.com",
                                "language": null,
                                "forks_count": 9,
                                "stargazers_count": 80,
                                "watchers_count": 80,
                                "size": 108,
                                "default_branch": "master",
                                "open_issues_count": 0,
                                "is_template": true,
                                "topics": [
                                    "octocat",
                                    "atom",
                                    "electron",
                                    "api"
                                ],
                                "has_issues": true,
                                "has_projects": true,
                                "has_wiki": true,
                                "has_pages": false,
                                "has_downloads": true,
                                "archived": false,
                                "disabled": false,
                                "pushed_at": "2011-01-26T19:06:43Z",
                                "created_at": "2011-01-26T19:01:12Z",
                                "updated_at": "2011-01-26T19:14:43Z",
                                "permissions": {
                                    "admin": false,
                                    "push": false,
                                    "pull": true
                                },
                                "allow_rebase_merge": true,
                                "template_repository": null,
                                "allow_squash_merge": true,
                                "allow_merge_commit": true,
                                "subscribers_count": 42,
                                "network_count": 0
                            }
                        ],
                        "url": "https://api.github.com/orgs/octo-org/migrations/79",
                        "created_at": "2015-07-06T15:33:38-07:00",
                        "updated_at": "2015-07-06T15:33:38-07:00"
                    }
                }
            ],
            "idName": "get-status-for-authenticated-user",
            "documentationUrl": "https://developer.github.com/v3/migrations/users/#get-the-status-of-a-user-migration"
        },
        {
            "name": "Download a user migration archive",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/user/migrations/:migration_id/archive",
            "previews": [
                {
                    "name": "wyandotte",
                    "description": "To access the Migrations API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "migration_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Fetches the URL to download the migration archive as a `tar.gz` file. Depending on the resources your repository uses, the migration archive can contain JSON files with data for these objects:\n\n*   attachments\n*   bases\n*   commit\\_comments\n*   issue\\_comments\n*   issue\\_events\n*   issues\n*   milestones\n*   organizations\n*   projects\n*   protected\\_branches\n*   pull\\_request\\_reviews\n*   pull\\_requests\n*   releases\n*   repositories\n*   review\\_comments\n*   schema\n*   users\n\nThe archive will also contain an `attachments` directory that includes all attachment files uploaded to GitHub.com and a `repositories` directory that contains the repository's Git data.\n\n",
            "responses": [
                {
                    "headers": {
                        "status": "302 Found",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "get-archive-for-authenticated-user",
            "documentationUrl": "https://developer.github.com/v3/migrations/users/#download-a-user-migration-archive"
        },
        {
            "name": "Delete a user migration archive",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/user/migrations/:migration_id/archive",
            "previews": [
                {
                    "name": "wyandotte",
                    "description": "To access the Migrations API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "migration_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Deletes a previous migration archive. Downloadable migration archives are automatically deleted after seven days. Migration metadata, which is returned in the [Get a list of user migrations](https://developer.github.com/v3/migrations/users/#get-a-list-of-user-migrations) and [Get the status of a user migration](https://developer.github.com/v3/migrations/users/#get-the-status-of-a-user-migration) endpoints, will continue to be available even after an archive is deleted.",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "delete-archive-for-authenticated-user",
            "documentationUrl": "https://developer.github.com/v3/migrations/users/#delete-a-user-migration-archive"
        },
        {
            "name": "Unlock a user repository",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/user/migrations/:migration_id/repos/:repo_name/lock",
            "previews": [
                {
                    "name": "wyandotte",
                    "description": "To access the Migrations API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.wyandotte-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "migration_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo_name",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Unlocks a repository. You can lock repositories when you [start a user migration](https://developer.github.com/v3/migrations/users/#start-a-user-migration). Once the migration is complete you can unlock each repository to begin using it again or [delete the repository](https://developer.github.com/v3/repos/#delete-a-repository) if you no longer need the source data. Returns a status of `404 Not Found` if the repository is not locked.",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "unlock-repo-for-authenticated-user",
            "documentationUrl": "https://developer.github.com/v3/migrations/users/#unlock-a-user-repository"
        }
    ],
    "oauthAuthorizations": [
        {
            "name": "List your grants",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/applications/grants",
            "previews": [],
            "params": [
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "You can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://developer.github.com/v3/oauth_authorizations/#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "id": 1,
                            "url": "https://api.github.com/applications/grants/1",
                            "app": {
                                "url": "http://my-github-app.com",
                                "name": "my github app",
                                "client_id": "abcde12345fghij67890"
                            },
                            "created_at": "2011-09-06T17:26:27Z",
                            "updated_at": "2011-09-06T20:39:23Z",
                            "scopes": [
                                "public_repo"
                            ]
                        }
                    ]
                }
            ],
            "idName": "list-grants",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#list-your-grants"
        },
        {
            "name": "Get a single grant",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/applications/grants/:grant_id",
            "previews": [],
            "params": [
                {
                    "name": "grant_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 1,
                        "url": "https://api.github.com/applications/grants/1",
                        "app": {
                            "url": "http://my-github-app.com",
                            "name": "my github app",
                            "client_id": "abcde12345fghij67890"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "scopes": [
                            "public_repo"
                        ]
                    }
                }
            ],
            "idName": "get-grant",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#get-a-single-grant"
        },
        {
            "name": "Delete a grant",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/applications/grants/:grant_id",
            "previews": [],
            "params": [
                {
                    "name": "grant_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "delete-grant",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#delete-a-grant"
        },
        {
            "name": "List your authorizations",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/authorizations",
            "previews": [],
            "params": [
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "id": 1,
                            "url": "https://api.github.com/authorizations/1",
                            "scopes": [
                                "public_repo"
                            ],
                            "token": "",
                            "token_last_eight": "12345678",
                            "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                            "app": {
                                "url": "http://my-github-app.com",
                                "name": "my github app",
                                "client_id": "abcde12345fghij67890"
                            },
                            "note": "optional note",
                            "note_url": "http://optional/note/url",
                            "updated_at": "2011-09-06T20:39:23Z",
                            "created_at": "2011-09-06T17:26:27Z",
                            "fingerprint": "jklmnop12345678"
                        }
                    ]
                }
            ],
            "idName": "list-authorizations",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#list-your-authorizations"
        },
        {
            "name": "Get a single authorization",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/authorizations/:authorization_id",
            "previews": [],
            "params": [
                {
                    "name": "authorization_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 1,
                        "url": "https://api.github.com/authorizations/1",
                        "scopes": [
                            "public_repo"
                        ],
                        "token": "",
                        "token_last_eight": "12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "app": {
                            "url": "http://my-github-app.com",
                            "name": "my github app",
                            "client_id": "abcde12345fghij67890"
                        },
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "created_at": "2011-09-06T17:26:27Z",
                        "fingerprint": "jklmnop12345678"
                    }
                }
            ],
            "idName": "get-authorization",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#get-a-single-authorization"
        },
        {
            "name": "Create a new authorization",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "POST",
            "path": "/authorizations",
            "previews": [],
            "params": [
                {
                    "name": "scopes",
                    "type": "string[]",
                    "description": "A list of scopes that this authorization is in.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "note",
                    "type": "string",
                    "description": "A note to remind you what the OAuth token is for. Tokens not associated with a specific OAuth application (i.e. personal access tokens) must have a unique note.",
                    "required": true,
                    "location": "body"
                },
                {
                    "name": "note_url",
                    "type": "string",
                    "description": "A URL to remind you what app the OAuth token is for.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "client_id",
                    "type": "string",
                    "description": "The 20 character OAuth app client key for which to create the token.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "client_secret",
                    "type": "string",
                    "description": "The 40 character OAuth app client secret for which to create the token.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "fingerprint",
                    "type": "string",
                    "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
                    "required": false,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "scopes": [
                        "public_repo"
                    ],
                    "note": "admin script"
                }
            ],
            "description": "Creates OAuth tokens using [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"\n\nYou can use this endpoint to create multiple OAuth tokens instead of implementing the [web flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/).\n\nTo create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.\n\nYou can also create tokens on GitHub from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://help.github.com/articles/creating-an-access-token-for-command-line-use).\n\nOrganizations that enforce SAML SSO require personal access tokens to be whitelisted. Read more about whitelisting tokens in [the GitHub Help documentation](https://help.github.com/articles/about-identity-and-access-management-with-saml-single-sign-on).",
            "responses": [
                {
                    "headers": {
                        "status": "201 Created",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 1,
                        "url": "https://api.github.com/authorizations/1",
                        "scopes": [
                            "public_repo"
                        ],
                        "token": "abcdefgh12345678",
                        "token_last_eight": "12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "app": {
                            "url": "http://my-github-app.com",
                            "name": "my github app",
                            "client_id": "abcde12345fghij67890"
                        },
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "created_at": "2011-09-06T17:26:27Z",
                        "fingerprint": ""
                    }
                }
            ],
            "idName": "create-authorization",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization"
        },
        {
            "name": "Get-or-create an authorization for a specific app",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "PUT",
            "path": "/authorizations/clients/:client_id",
            "previews": [],
            "params": [
                {
                    "name": "client_id",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "client_secret",
                    "type": "string",
                    "description": "The 40 character OAuth app client secret associated with the client ID specified in the URL.",
                    "required": true,
                    "location": "body"
                },
                {
                    "name": "scopes",
                    "type": "string[]",
                    "description": "A list of scopes that this authorization is in.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "note",
                    "type": "string",
                    "description": "A note to remind you what the OAuth token is for.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "note_url",
                    "type": "string",
                    "description": "A URL to remind you what app the OAuth token is for.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "fingerprint",
                    "type": "string",
                    "description": "A unique string to distinguish an authorization from others created for the same client and user. If provided, this API is functionally equivalent to [Get-or-create an authorization for a specific app and fingerprint](https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint).",
                    "required": false,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "client_secret": "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd",
                    "scopes": [
                        "public_repo"
                    ],
                    "note": "admin script"
                }
            ],
            "description": "Creates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"",
            "idName": "get-or-create-authorization-for-app",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app"
        },
        {
            "name": "Get-or-create an authorization for a specific app and fingerprint",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "PUT",
            "path": "/authorizations/clients/:client_id/:fingerprint",
            "previews": [],
            "params": [
                {
                    "name": "client_id",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "fingerprint",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "client_secret",
                    "type": "string",
                    "description": "The 40 character OAuth app client secret associated with the client ID specified in the URL.",
                    "required": true,
                    "location": "body"
                },
                {
                    "name": "scopes",
                    "type": "string[]",
                    "description": "A list of scopes that this authorization is in.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "note",
                    "type": "string",
                    "description": "A note to remind you what the OAuth token is for.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "note_url",
                    "type": "string",
                    "description": "A URL to remind you what app the OAuth token is for.",
                    "required": false,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "client_secret": "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd",
                    "scopes": [
                        "public_repo"
                    ],
                    "note": "admin script"
                }
            ],
            "description": "This method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"",
            "idName": "get-or-create-authorization-for-app-and-fingerprint",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint"
        },
        {
            "name": "Get-or-create an authorization for a specific app and fingerprint",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "PUT",
            "path": "/authorizations/clients/:client_id/:fingerprint",
            "previews": [],
            "params": [
                {
                    "name": "client_id",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "fingerprint",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "client_secret",
                    "type": "string",
                    "description": "The 40 character OAuth app client secret associated with the client ID specified in the URL.",
                    "required": true,
                    "location": "body"
                },
                {
                    "name": "scopes",
                    "type": "string[]",
                    "description": "A list of scopes that this authorization is in.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "note",
                    "type": "string",
                    "description": "A note to remind you what the OAuth token is for.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "note_url",
                    "type": "string",
                    "description": "A URL to remind you what app the OAuth token is for.",
                    "required": false,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "client_secret": "abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd",
                    "scopes": [
                        "public_repo"
                    ],
                    "note": "admin script"
                }
            ],
            "description": "This method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"",
            "idName": "get-or-create-authorization-for-app-fingerprint",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint",
            "deprecated": {
                "date": "2018-12-27",
                "message": "`idName` changed for \"Get-or-create an authorization for a specific app and fingerprint\". It now includes `-and-`",
                "before": {
                    "idName": "get-or-create-authorization-for-app-fingerprint"
                },
                "after": {
                    "idName": "get-or-create-authorization-for-app-and-fingerprint"
                }
            }
        },
        {
            "name": "Update an existing authorization",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "PATCH",
            "path": "/authorizations/:authorization_id",
            "previews": [],
            "params": [
                {
                    "name": "authorization_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "scopes",
                    "type": "string[]",
                    "description": "Replaces the authorization scopes with these.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "add_scopes",
                    "type": "string[]",
                    "description": "A list of scopes to add to this authorization.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "remove_scopes",
                    "type": "string[]",
                    "description": "A list of scopes to remove from this authorization.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "note",
                    "type": "string",
                    "description": "A note to remind you what the OAuth token is for. Tokens not associated with a specific OAuth application (i.e. personal access tokens) must have a unique note.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "note_url",
                    "type": "string",
                    "description": "A URL to remind you what app the OAuth token is for.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "fingerprint",
                    "type": "string",
                    "description": "A unique string to distinguish an authorization from others created for the same client ID and user.",
                    "required": false,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "add_scopes": [
                        "repo"
                    ],
                    "note": "admin script"
                }
            ],
            "description": "If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"\n\nYou can only send one of these scope keys at a time.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 1,
                        "url": "https://api.github.com/authorizations/1",
                        "scopes": [
                            "public_repo"
                        ],
                        "token": "",
                        "token_last_eight": "12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "app": {
                            "url": "http://my-github-app.com",
                            "name": "my github app",
                            "client_id": "abcde12345fghij67890"
                        },
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "created_at": "2011-09-06T17:26:27Z",
                        "fingerprint": "jklmnop12345678"
                    }
                }
            ],
            "idName": "update-authorization",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#update-an-existing-authorization"
        },
        {
            "name": "Delete an authorization",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/authorizations/:authorization_id",
            "previews": [],
            "params": [
                {
                    "name": "authorization_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "delete-authorization",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#delete-an-authorization"
        },
        {
            "name": "Check an authorization",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/applications/:client_id/tokens/:access_token",
            "previews": [],
            "params": [
                {
                    "name": "client_id",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "access_token",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "OAuth applications can use a special API method for checking OAuth token validity without running afoul of normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing it, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 1,
                        "url": "https://api.github.com/authorizations/1",
                        "scopes": [
                            "public_repo"
                        ],
                        "token": "abcdefgh12345678",
                        "token_last_eight": "12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "app": {
                            "url": "http://my-github-app.com",
                            "name": "my github app",
                            "client_id": "abcde12345fghij67890"
                        },
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "created_at": "2011-09-06T17:26:27Z",
                        "fingerprint": "jklmnop12345678",
                        "user": {
                            "login": "octocat",
                            "id": 1,
                            "node_id": "MDQ6VXNlcjE=",
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/octocat",
                            "html_url": "https://github.com/octocat",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "type": "User",
                            "site_admin": false
                        }
                    }
                }
            ],
            "idName": "check-authorization",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#check-an-authorization"
        },
        {
            "name": "Reset an authorization",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "POST",
            "path": "/applications/:client_id/tokens/:access_token",
            "previews": [],
            "params": [
                {
                    "name": "client_id",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "access_token",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "OAuth applications can use this API method to reset a valid OAuth token without end user involvement. Applications must save the \"token\" property in the response, because changes take effect immediately. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing it, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 1,
                        "url": "https://api.github.com/authorizations/1",
                        "scopes": [
                            "public_repo"
                        ],
                        "token": "abcdefgh12345678",
                        "token_last_eight": "12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "app": {
                            "url": "http://my-github-app.com",
                            "name": "my github app",
                            "client_id": "abcde12345fghij67890"
                        },
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "created_at": "2011-09-06T17:26:27Z",
                        "fingerprint": "jklmnop12345678",
                        "user": {
                            "login": "octocat",
                            "id": 1,
                            "node_id": "MDQ6VXNlcjE=",
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/octocat",
                            "html_url": "https://github.com/octocat",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "type": "User",
                            "site_admin": false
                        }
                    }
                }
            ],
            "idName": "reset-authorization",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#reset-an-authorization"
        },
        {
            "name": "Revoke an authorization for an application",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/applications/:client_id/tokens/:access_token",
            "previews": [],
            "params": [
                {
                    "name": "client_id",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "access_token",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) for this method, where the username is the OAuth application `client_id` and the password is its `client_secret`.",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "revoke-authorization-for-application",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#revoke-an-authorization-for-an-application"
        },
        {
            "name": "Revoke a grant for an application",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/applications/:client_id/grants/:access_token",
            "previews": [],
            "params": [
                {
                    "name": "client_id",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "access_token",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) for this method, where the username is the OAuth application `client_id` and the password is its `client_secret`. You must also provide a valid token as `:access_token` and the grant for the token's owner will be deleted.\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "revoke-grant-for-application",
            "documentationUrl": "https://developer.github.com/v3/oauth_authorizations/#revoke-a-grant-for-an-application"
        }
    ],
    "orgs": [
        {
            "name": "List credential authorizations for an organization",
            "enabledForApps": false,
            "githubCloudOnly": true,
            "method": "GET",
            "path": "/orgs/:org/credential-authorizations",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nAn authenticated organization owner with the `read:org` scope can list all credential authorizations for an organization that uses SAML single sign-on (SSO). The credentials are either personal access tokens or SSH keys that organization members have authorized for the organization. For more information, see [About authentication with SAML single sign-on](https://help.github.com/en/articles/about-authentication-with-saml-single-sign-on).",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "login": "octocat",
                            "credential_id": "161195",
                            "credential_type": "personal access token",
                            "token_last_eight": "71c3fc11",
                            "credential_authorized_at": "2011-01-26T19:06:43Z",
                            "scopes": [
                                "user",
                                "repo"
                            ]
                        },
                        {
                            "login": "hubot",
                            "credential_id": "161196",
                            "credential_type": "personal access token",
                            "token_last_eight": "12345678",
                            "credential_authorized_at": "2019-03-29T19:06:43Z",
                            "scopes": [
                                "repo"
                            ]
                        }
                    ]
                }
            ],
            "idName": "list-credential-authorizations",
            "documentationUrl": "https://developer.github.com/v3/orgs/#list-credential-authorizations-for-an-organization"
        },
        {
            "name": "Remove a credential authorization for an organization",
            "enabledForApps": false,
            "githubCloudOnly": true,
            "method": "DELETE",
            "path": "/orgs/:org/credential-authorizations/:credential_id",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "credential_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nAn authenticated organization owner with the `admin:org` scope can remove a credential authorization for an organization that uses SAML SSO. Once you remove someone's credential authorization, they will need to create a new personal access token or SSH key and authorize it for the organization they want to access.",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "remove-credential-authorization",
            "documentationUrl": "https://developer.github.com/v3/orgs/#remove-a-credential-authorization-for-an-organization"
        },
        {
            "name": "List blocked users",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/orgs/:org/blocks",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "List the users blocked by an organization.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "login": "octocat",
                            "id": 1,
                            "node_id": "MDQ6VXNlcjE=",
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/octocat",
                            "html_url": "https://github.com/octocat",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "type": "User",
                            "site_admin": false
                        }
                    ]
                }
            ],
            "idName": "list-blocked-users",
            "documentationUrl": "https://developer.github.com/v3/orgs/blocking/#list-blocked-users"
        },
        {
            "name": "Check whether a user is blocked from an organization",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/orgs/:org/blocks/:username",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "username",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "If the user is blocked:\n\nIf the user is not blocked:",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "description": "If the user is blocked:"
                },
                {
                    "headers": {
                        "status": "404 Not Found",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "description": "If the user is not blocked:"
                }
            ],
            "idName": "check-blocked-user",
            "documentationUrl": "https://developer.github.com/v3/orgs/blocking/#check-whether-a-user-is-blocked-from-an-organization"
        },
        {
            "name": "Block a user",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "PUT",
            "path": "/orgs/:org/blocks/:username",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "username",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "block-user",
            "documentationUrl": "https://developer.github.com/v3/orgs/blocking/#block-a-user"
        },
        {
            "name": "Unblock a user",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/orgs/:org/blocks/:username",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "username",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "unblock-user",
            "documentationUrl": "https://developer.github.com/v3/orgs/blocking/#unblock-a-user"
        },
        {
            "name": "List organization invitation teams",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/orgs/:org/invitations/:invitation_id/teams",
            "previews": [
                {
                    "name": "dazzler",
                    "description": "**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dazzler-preview+json\n\n```",
                    "required": false
                }
            ],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "invitation_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user must be an organization owner.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "id": 1,
                            "node_id": "MDQ6VGVhbTE=",
                            "url": "https://api.github.com/teams/1",
                            "name": "Justice League",
                            "slug": "justice-league",
                            "description": "A great team.",
                            "privacy": "closed",
                            "permission": "admin",
                            "members_url": "https://api.github.com/teams/1/members{/member}",
                            "repositories_url": "https://api.github.com/teams/1/repos",
                            "parent": null
                        }
                    ]
                }
            ],
            "idName": "list-invitation-teams",
            "documentationUrl": "https://developer.github.com/v3/orgs/members/#list-organization-invitation-teams"
        },
        {
            "name": "List pending organization invitations",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/orgs/:org/invitations",
            "previews": [
                {
                    "name": "dazzler",
                    "description": "**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dazzler-preview+json\n\n```",
                    "required": false
                }
            ],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "id": 1,
                            "login": "monalisa",
                            "email": "octocat@github.com",
                            "role": "direct_member",
                            "created_at": "2016-11-30T06:46:10-08:00",
                            "inviter": {
                                "login": "other_user",
                                "id": 1,
                                "node_id": "MDQ6VXNlcjE=",
                                "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                                "gravatar_id": "",
                                "url": "https://api.github.com/users/other_user",
                                "html_url": "https://github.com/other_user",
                                "followers_url": "https://api.github.com/users/other_user/followers",
                                "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                                "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                                "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                                "organizations_url": "https://api.github.com/users/other_user/orgs",
                                "repos_url": "https://api.github.com/users/other_user/repos",
                                "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                                "received_events_url": "https://api.github.com/users/other_user/received_events",
                                "type": "User",
                                "site_admin": false
                            },
                            "team_count": 2,
                            "invitation_team_url": "https://api.github.com/organizations/2/invitations/1/teams"
                        }
                    ]
                }
            ],
            "idName": "list-pending-invitations",
            "documentationUrl": "https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations"
        },
        {
            "name": "Create organization invitation",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "POST",
            "path": "/orgs/:org/invitations",
            "previews": [
                {
                    "name": "dazzler",
                    "description": "**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dazzler-preview+json\n\n```",
                    "required": false
                }
            ],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "invitee_id",
                    "type": "integer",
                    "description": "**Required unless you provide `email`**. GitHub user ID for the person you are inviting.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "email",
                    "type": "string",
                    "description": "**Required unless you provide `invitee_id`**. Email address of the person you are inviting, which can be an existing GitHub user.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "role",
                    "type": "string",
                    "description": "Specify role for new member. Can be one of:  \n\\* `admin` - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.  \n\\* `direct_member` - Non-owner organization members with ability to see other members and join teams by invitation.  \n\\* `billing_manager` - Non-owner organization members with ability to manage the billing settings of your organization.",
                    "default": "direct_member",
                    "required": false,
                    "enum": [
                        "admin",
                        "direct_member",
                        "billing_manager"
                    ],
                    "location": "body"
                },
                {
                    "name": "team_ids",
                    "type": "integer[]",
                    "description": "Specify IDs for the teams you want to invite new members to.",
                    "required": false,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "email": "octocat@github.com",
                    "role": "direct_member",
                    "team_ids": [
                        12,
                        26
                    ]
                }
            ],
            "description": "Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.",
            "responses": [
                {
                    "headers": {
                        "status": "201 Created",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 1,
                        "login": "monalisa",
                        "email": "octocat@github.com",
                        "role": "direct_member",
                        "created_at": "2016-11-30T06:46:10-08:00",
                        "inviter": {
                            "login": "other_user",
                            "id": 1,
                            "node_id": "MDQ6VXNlcjE=",
                            "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/other_user",
                            "html_url": "https://github.com/other_user",
                            "followers_url": "https://api.github.com/users/other_user/followers",
                            "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                            "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                            "organizations_url": "https://api.github.com/users/other_user/orgs",
                            "repos_url": "https://api.github.com/users/other_user/repos",
                            "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/other_user/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "team_count": 2,
                        "invitation_team_url": "https://api.github.com/organizations/2/invitations/1/teams"
                    }
                }
            ],
            "triggersNotification": true,
            "idName": "create-invitation",
            "documentationUrl": "https://developer.github.com/v3/orgs/members/#create-organization-invitation"
        }
    ],
    "projects": [
        {
            "name": "List user projects",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/users/:username/projects",
            "previews": [
                {
                    "name": "inertia",
                    "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "username",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "state",
                    "type": "string",
                    "description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.",
                    "default": "open",
                    "required": false,
                    "enum": [
                        "open",
                        "closed",
                        "all"
                    ],
                    "location": "query"
                },
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "owner_url": "https://api.github.com/users/octocat",
                            "url": "https://api.github.com/projects/1002603",
                            "html_url": "https://github.com/users/octocat/projects/1",
                            "columns_url": "https://api.github.com/projects/1002603/columns",
                            "id": 1002603,
                            "node_id": "MDc6UHJvamVjdDEwMDI2MDM=",
                            "name": "My Projects",
                            "body": "A board to manage my personal projects.",
                            "number": 1,
                            "state": "open",
                            "creator": {
                                "login": "octocat",
                                "id": 1,
                                "node_id": "MDQ6VXNlcjE=",
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "gravatar_id": "",
                                "url": "https://api.github.com/users/octocat",
                                "html_url": "https://github.com/octocat",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "type": "User",
                                "site_admin": false
                            },
                            "created_at": "2011-04-10T20:09:31Z",
                            "updated_at": "2014-03-03T18:58:10Z"
                        }
                    ]
                }
            ],
            "idName": "list-for-user",
            "documentationUrl": "https://developer.github.com/v3/projects/#list-user-projects"
        },
        {
            "name": "Create a user project",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "POST",
            "path": "/user/projects",
            "previews": [
                {
                    "name": "inertia",
                    "description": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.inertia-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the project.",
                    "required": true,
                    "location": "body"
                },
                {
                    "name": "body",
                    "type": "string",
                    "description": "The description of the project.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "requests": [
                {
                    "name": "Projects Documentation",
                    "body": "Developer documentation project for the developer site."
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "201 Created",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "owner_url": "https://api.github.com/users/octocat",
                        "url": "https://api.github.com/projects/1002603",
                        "html_url": "https://github.com/users/octocat/projects/1",
                        "columns_url": "https://api.github.com/projects/1002603/columns",
                        "id": 1002603,
                        "node_id": "MDc6UHJvamVjdDEwMDI2MDM=",
                        "name": "My Projects",
                        "body": "A board to manage my personal projects.",
                        "number": 1,
                        "state": "open",
                        "creator": {
                            "login": "octocat",
                            "id": 1,
                            "node_id": "MDQ6VXNlcjE=",
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/octocat",
                            "html_url": "https://github.com/octocat",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "created_at": "2011-04-10T20:09:31Z",
                        "updated_at": "2014-03-03T18:58:10Z"
                    }
                }
            ],
            "idName": "create-for-authenticated-user",
            "documentationUrl": "https://developer.github.com/v3/projects/#create-a-user-project"
        }
    ],
    "pulls": [
        {
            "name": "Update a pull request branch",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "PUT",
            "path": "/repos/:owner/:repo/pulls/:pull_number/update-branch",
            "previews": [
                {
                    "name": "lydian",
                    "description": "**Note:** Updating the pull request branch with latest upstream changes is currently available for developers to preview. To access this new endpoint during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.lydian-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "pull_number",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "expected_head_sha",
                    "type": "string",
                    "description": "The expected SHA of the pull request's HEAD ref. This is the most recent commit on the pull request's branch. If the expected SHA does not match the pull request's HEAD, you will receive a `422 Unprocessable Entity` status. You can use the \"[List commits on a repository](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository)\" endpoint to find the most recent commit SHA.",
                    "default": "SHA of the pull request's current HEAD ref.",
                    "required": false,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "expected_head_sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
                }
            ],
            "description": "Updates the pull request branch with the latest upstream changes by merging HEAD from the base branch into the pull request branch.",
            "responses": [
                {
                    "headers": {
                        "status": "202 Accepted",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "message": "Updating pull request branch.",
                        "url": "https://github.com/repos/octocat/Hello-World/pulls/53"
                    }
                }
            ],
            "idName": "update-branch",
            "documentationUrl": "https://developer.github.com/v3/pulls/#update-a-pull-request-branch"
        },
        {
            "name": "Update a pull request review",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "PUT",
            "path": "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id",
            "previews": [],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "pull_number",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "review_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "body",
                    "type": "string",
                    "description": "The body text of the pull request review.",
                    "required": true,
                    "location": "body"
                },
                {
                    "name": "number",
                    "type": "integer",
                    "required": false,
                    "description": "",
                    "location": "url",
                    "deprecated": {
                        "date": "2019-04-10",
                        "message": "\"number\" parameter renamed to \"pull_number\"",
                        "before": {
                            "name": "number"
                        },
                        "after": {
                            "name": "pull_number"
                        }
                    }
                }
            ],
            "requests": [
                {
                    "body": "This is close to perfect! Please address the suggested inline change. And add more about this."
                }
            ],
            "description": "Update the review summary comment with new text.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 80,
                        "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=",
                        "user": {
                            "login": "octocat",
                            "id": 1,
                            "node_id": "MDQ6VXNlcjE=",
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/octocat",
                            "html_url": "https://github.com/octocat",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "body": "This is close to perfect! Please address the suggested inline change. And add more about this.",
                        "commit_id": "ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091",
                        "state": "CHANGES_REQUESTED",
                        "html_url": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80",
                        "pull_request_url": "https://api.github.com/repos/octocat/Hello-World/pulls/12",
                        "_links": {
                            "html": {
                                "href": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80"
                            },
                            "pull_request": {
                                "href": "https://api.github.com/repos/octocat/Hello-World/pulls/12"
                            }
                        }
                    }
                }
            ],
            "idName": "update-review",
            "documentationUrl": "https://developer.github.com/v3/pulls/reviews/#update-a-pull-request-review"
        }
    ],
    "rateLimit": [
        {
            "name": "Get your current rate limit status",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/rate_limit",
            "previews": [],
            "params": [],
            "description": "**Note:** Accessing this endpoint does not count against your REST API rate limit.\n\n**Understanding your rate limit status**\n\nThe Search API has a [custom rate limit](https://developer.github.com/v3/search/#rate-limit), separate from the rate limit governing the rest of the REST API. The GraphQL API also has a [custom rate limit](https://developer.github.com/v4/guides/resource-limitations/#rate-limit) that is separate from and calculated differently than rate limits in the REST API.\n\nFor these reasons, the Rate Limit API response categorizes your rate limit. Under `resources`, you'll see four objects:\n\n*   The `core` object provides your rate limit status for all non-search-related resources in the REST API.\n*   The `search` object provides your rate limit status for the [Search API](https://developer.github.com/v3/search/).\n*   The `graphql` object provides your rate limit status for the [GraphQL API](https://developer.github.com/v4/).\n*   The `integration_manifest` object provides your rate limit status for the [GitHub App Manifest code conversion](https://developer.github.com/apps/building-github-apps/creating-github-apps-from-a-manifest/#3-you-exchange-the-temporary-code-to-retrieve-the-app-configuration) endpoint.\n\nFor more information on the headers and values in the rate limit response, see \"[Rate limiting](https://developer.github.com/v3/#rate-limiting).\"\n\nThe `rate` object (shown at the bottom of the response above) is deprecated.\n\nIf you're writing new API client code or updating existing code, you should use the `core` object instead of the `rate` object. The `core` object contains the same information that is present in the `rate` object.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "resources": {
                            "core": {
                                "limit": 5000,
                                "remaining": 4999,
                                "reset": 1372700873
                            },
                            "search": {
                                "limit": 30,
                                "remaining": 18,
                                "reset": 1372697452
                            },
                            "graphql": {
                                "limit": 5000,
                                "remaining": 4993,
                                "reset": 1372700389
                            },
                            "integration_manifest": {
                                "limit": 5000,
                                "remaining": 4999,
                                "reset": 1551806725
                            }
                        },
                        "rate": {
                            "limit": 5000,
                            "remaining": 4999,
                            "reset": 1372700873
                        }
                    }
                }
            ],
            "idName": "get",
            "documentationUrl": "https://developer.github.com/v3/rate_limit/#get-your-current-rate-limit-status"
        }
    ],
    "repos": [
        {
            "name": "Create repository using a repository template",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "POST",
            "path": "/repos/:template_owner/:template_repo/generate",
            "previews": [
                {
                    "name": "baptiste",
                    "description": "**Note:** Creating and using repository templates is currently available for developers to preview. To access this new endpoint during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.baptiste-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "template_owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "template_repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "owner",
                    "type": "string",
                    "description": "The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "The name of the new repository.",
                    "required": true,
                    "location": "body"
                },
                {
                    "name": "description",
                    "type": "string",
                    "description": "A short description of the new repository.",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "private",
                    "type": "boolean",
                    "description": "Either `true` to create a new private repository or `false` to create a new public one.",
                    "default": false,
                    "required": false,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "owner": "octocat",
                    "name": "Hello-World",
                    "description": "This is your first repository",
                    "private": false
                }
            ],
            "description": "Creates a new repository using a repository template. Use the `repo` route parameter to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the [`GET /repos/:owner/:repo`](https://developer.github.com/v3/repos/#get) endpoint and check that the `is_template` key is `true`.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository\n\n\\`",
            "responses": [
                {
                    "headers": {
                        "status": "201 Created",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 1296269,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                        "name": "Hello-World",
                        "full_name": "octocat/Hello-World",
                        "owner": {
                            "login": "octocat",
                            "id": 1,
                            "node_id": "MDQ6VXNlcjE=",
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/octocat",
                            "html_url": "https://github.com/octocat",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "private": false,
                        "html_url": "https://github.com/octocat/Hello-World",
                        "description": "This your first repo!",
                        "fork": false,
                        "url": "https://api.github.com/repos/octocat/Hello-World",
                        "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                        "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                        "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                        "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                        "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                        "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                        "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                        "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                        "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                        "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                        "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                        "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                        "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                        "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                        "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                        "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                        "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                        "git_url": "git:github.com/octocat/Hello-World.git",
                        "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                        "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                        "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                        "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                        "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                        "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                        "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                        "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                        "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                        "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                        "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                        "ssh_url": "git@github.com:octocat/Hello-World.git",
                        "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                        "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                        "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                        "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                        "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                        "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                        "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                        "clone_url": "https://github.com/octocat/Hello-World.git",
                        "mirror_url": "git:git.example.com/octocat/Hello-World",
                        "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                        "svn_url": "https://svn.github.com/octocat/Hello-World",
                        "homepage": "https://github.com",
                        "language": null,
                        "forks_count": 9,
                        "stargazers_count": 80,
                        "watchers_count": 80,
                        "size": 108,
                        "default_branch": "master",
                        "open_issues_count": 0,
                        "is_template": false,
                        "topics": [
                            "octocat",
                            "atom",
                            "electron",
                            "api"
                        ],
                        "has_issues": true,
                        "has_projects": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_downloads": true,
                        "archived": false,
                        "disabled": false,
                        "pushed_at": "2011-01-26T19:06:43Z",
                        "created_at": "2011-01-26T19:01:12Z",
                        "updated_at": "2011-01-26T19:14:43Z",
                        "permissions": {
                            "admin": false,
                            "push": false,
                            "pull": true
                        },
                        "allow_rebase_merge": true,
                        "template_repository": {
                            "id": 1296269,
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "name": "Hello-World",
                            "full_name": "octocat/Hello-World",
                            "owner": {
                                "login": "octocat",
                                "id": 1,
                                "node_id": "MDQ6VXNlcjE=",
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "gravatar_id": "",
                                "url": "https://api.github.com/users/octocat",
                                "html_url": "https://github.com/octocat",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "type": "User",
                                "site_admin": false
                            },
                            "private": false,
                            "html_url": "https://github.com/octocat/Hello-World",
                            "description": "This your first repo!",
                            "fork": false,
                            "url": "https://api.github.com/repos/octocat/Hello-World",
                            "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                            "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                            "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                            "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                            "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                            "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                            "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                            "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                            "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                            "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                            "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                            "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                            "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                            "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                            "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                            "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                            "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                            "git_url": "git:github.com/octocat/Hello-World.git",
                            "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                            "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                            "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                            "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                            "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                            "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                            "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                            "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                            "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                            "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                            "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                            "ssh_url": "git@github.com:octocat/Hello-World.git",
                            "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                            "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                            "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                            "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                            "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                            "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                            "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                            "clone_url": "https://github.com/octocat/Hello-World.git",
                            "mirror_url": "git:git.example.com/octocat/Hello-World",
                            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                            "svn_url": "https://svn.github.com/octocat/Hello-World",
                            "homepage": "https://github.com",
                            "language": null,
                            "forks_count": 9,
                            "stargazers_count": 80,
                            "watchers_count": 80,
                            "size": 108,
                            "default_branch": "master",
                            "open_issues_count": 0,
                            "is_template": true,
                            "topics": [
                                "octocat",
                                "atom",
                                "electron",
                                "api"
                            ],
                            "has_issues": true,
                            "has_projects": true,
                            "has_wiki": true,
                            "has_pages": false,
                            "has_downloads": true,
                            "archived": false,
                            "disabled": false,
                            "pushed_at": "2011-01-26T19:06:43Z",
                            "created_at": "2011-01-26T19:01:12Z",
                            "updated_at": "2011-01-26T19:14:43Z",
                            "permissions": {
                                "admin": false,
                                "push": false,
                                "pull": true
                            },
                            "allow_rebase_merge": true,
                            "template_repository": null,
                            "allow_squash_merge": true,
                            "allow_merge_commit": true,
                            "subscribers_count": 42,
                            "network_count": 0
                        },
                        "allow_squash_merge": true,
                        "allow_merge_commit": true,
                        "subscribers_count": 42,
                        "network_count": 0
                    }
                }
            ],
            "idName": "create-using-template",
            "documentationUrl": "https://developer.github.com/v3/repos/#create-repository-using-a-repository-template"
        },
        {
            "name": "Check if vulnerability alerts are enabled for a repository",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/repos/:owner/:repo/vulnerability-alerts",
            "previews": [
                {
                    "name": "dorian",
                    "description": "**Note:** Enabling and disabling vulnerability alerts for a repository using the REST API is currently available for developers to preview. To access these new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dorian-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Shows whether vulnerability alerts are enabled or disabled for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\" in the GitHub Help documentation.",
            "idName": "check-vulnerability-alerts",
            "documentationUrl": "https://developer.github.com/v3/repos/#check-if-vulnerability-alerts-are-enabled-for-a-repository"
        },
        {
            "name": "Enable vulnerability alerts",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "PUT",
            "path": "/repos/:owner/:repo/vulnerability-alerts",
            "previews": [
                {
                    "name": "dorian",
                    "description": "**Note:** Enabling and disabling vulnerability alerts for a repository using the REST API is currently available for developers to preview. To access these new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dorian-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Enables vulnerability alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\" in the GitHub Help documentation.",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "enable-vulnerability-alerts",
            "documentationUrl": "https://developer.github.com/v3/repos/#enable-vulnerability-alerts"
        },
        {
            "name": "Disable vulnerability alerts",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/repos/:owner/:repo/vulnerability-alerts",
            "previews": [
                {
                    "name": "dorian",
                    "description": "**Note:** Enabling and disabling vulnerability alerts for a repository using the REST API is currently available for developers to preview. To access these new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dorian-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Disables vulnerability alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\" in the GitHub Help documentation.",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "disable-vulnerability-alerts",
            "documentationUrl": "https://developer.github.com/v3/repos/#disable-vulnerability-alerts"
        },
        {
            "name": "Enable automated security fixes",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "PUT",
            "path": "/repos/:owner/:repo/automated-security-fixes",
            "previews": [
                {
                    "name": "london",
                    "description": "**Note:** Enabling or disabling automated security fixes is currently available for developers to preview. To access this new endpoint during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.london-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Enables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)\" in the GitHub Help documentation.",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "enable-automated-security-fixes",
            "documentationUrl": "https://developer.github.com/v3/repos/#enable-automated-security-fixes"
        },
        {
            "name": "Disable automated security fixes",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/repos/:owner/:repo/automated-security-fixes",
            "previews": [
                {
                    "name": "london",
                    "description": "**Note:** Enabling or disabling automated security fixes is currently available for developers to preview. To access this new endpoint during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.london-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Disables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)\" in the GitHub Help documentation.",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "disable-automated-security-fixes",
            "documentationUrl": "https://developer.github.com/v3/repos/#disable-automated-security-fixes"
        },
        {
            "name": "List branches for HEAD commit",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/repos/:owner/:repo/commits/:commit_sha/branches-where-head",
            "previews": [
                {
                    "name": "groot",
                    "description": "**Note:** Listing branches or pull requests for a commit in the Commits API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-04-11-pulls-branches-for-commit/) for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.groot-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "commit_sha",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nReturns all branches where the given commit SHA is the HEAD, or latest commit for the branch.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "name": "branch_5",
                            "commit": {
                                "sha": "c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc",
                                "url": "https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc"
                            },
                            "protected": "false"
                        }
                    ]
                }
            ],
            "idName": "list-branches-for-head-commit",
            "documentationUrl": "https://developer.github.com/v3/repos/commits/#list-branches-for-head-commit"
        },
        {
            "name": "List pull requests associated with commit",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/repos/:owner/:repo/commits/:commit_sha/pulls",
            "previews": [
                {
                    "name": "groot",
                    "description": "**Note:** Listing branches or pull requests for a commit in the Commits API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-04-11-pulls-branches-for-commit/) for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.groot-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "commit_sha",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "Lists all pull requests containing the provided commit SHA, which can be from any point in the commit history. The results will include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests) endpoint.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
                            "id": 1,
                            "node_id": "MDExOlB1bGxSZXF1ZXN0MQ==",
                            "html_url": "https://github.com/octocat/Hello-World/pull/1347",
                            "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
                            "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch",
                            "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
                            "commits_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits",
                            "review_comments_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments",
                            "review_comment_url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}",
                            "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
                            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                            "number": 1347,
                            "state": "open",
                            "locked": true,
                            "title": "new-feature",
                            "user": {
                                "login": "octocat",
                                "id": 1,
                                "node_id": "MDQ6VXNlcjE=",
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "gravatar_id": "",
                                "url": "https://api.github.com/users/octocat",
                                "html_url": "https://github.com/octocat",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "type": "User",
                                "site_admin": false
                            },
                            "body": "Please pull these awesome changes",
                            "labels": [
                                {
                                    "id": 208045946,
                                    "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                                    "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                                    "name": "bug",
                                    "description": "Something isn't working",
                                    "color": "f29513",
                                    "default": true
                                }
                            ],
                            "milestone": {
                                "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
                                "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
                                "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
                                "id": 1002604,
                                "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
                                "number": 1,
                                "state": "open",
                                "title": "v1.0",
                                "description": "Tracking milestone for version 1.0",
                                "creator": {
                                    "login": "octocat",
                                    "id": 1,
                                    "node_id": "MDQ6VXNlcjE=",
                                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                    "gravatar_id": "",
                                    "url": "https://api.github.com/users/octocat",
                                    "html_url": "https://github.com/octocat",
                                    "followers_url": "https://api.github.com/users/octocat/followers",
                                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                                    "repos_url": "https://api.github.com/users/octocat/repos",
                                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                                    "type": "User",
                                    "site_admin": false
                                },
                                "open_issues": 4,
                                "closed_issues": 8,
                                "created_at": "2011-04-10T20:09:31Z",
                                "updated_at": "2014-03-03T18:58:10Z",
                                "closed_at": "2013-02-12T13:22:01Z",
                                "due_on": "2012-10-09T23:39:01Z"
                            },
                            "active_lock_reason": "too heated",
                            "created_at": "2011-01-26T19:01:12Z",
                            "updated_at": "2011-01-26T19:01:12Z",
                            "closed_at": "2011-01-26T19:01:12Z",
                            "merged_at": "2011-01-26T19:01:12Z",
                            "merge_commit_sha": "e5bd3914e2e596debea16f433f57875b5b90bcd6",
                            "assignee": {
                                "login": "octocat",
                                "id": 1,
                                "node_id": "MDQ6VXNlcjE=",
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "gravatar_id": "",
                                "url": "https://api.github.com/users/octocat",
                                "html_url": "https://github.com/octocat",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "type": "User",
                                "site_admin": false
                            },
                            "assignees": [
                                {
                                    "login": "octocat",
                                    "id": 1,
                                    "node_id": "MDQ6VXNlcjE=",
                                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                    "gravatar_id": "",
                                    "url": "https://api.github.com/users/octocat",
                                    "html_url": "https://github.com/octocat",
                                    "followers_url": "https://api.github.com/users/octocat/followers",
                                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                                    "repos_url": "https://api.github.com/users/octocat/repos",
                                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                                    "type": "User",
                                    "site_admin": false
                                },
                                {
                                    "login": "hubot",
                                    "id": 1,
                                    "node_id": "MDQ6VXNlcjE=",
                                    "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                                    "gravatar_id": "",
                                    "url": "https://api.github.com/users/hubot",
                                    "html_url": "https://github.com/hubot",
                                    "followers_url": "https://api.github.com/users/hubot/followers",
                                    "following_url": "https://api.github.com/users/hubot/following{/other_user}",
                                    "gists_url": "https://api.github.com/users/hubot/gists{/gist_id}",
                                    "starred_url": "https://api.github.com/users/hubot/starred{/owner}{/repo}",
                                    "subscriptions_url": "https://api.github.com/users/hubot/subscriptions",
                                    "organizations_url": "https://api.github.com/users/hubot/orgs",
                                    "repos_url": "https://api.github.com/users/hubot/repos",
                                    "events_url": "https://api.github.com/users/hubot/events{/privacy}",
                                    "received_events_url": "https://api.github.com/users/hubot/received_events",
                                    "type": "User",
                                    "site_admin": true
                                }
                            ],
                            "requested_reviewers": [
                                {
                                    "login": "other_user",
                                    "id": 1,
                                    "node_id": "MDQ6VXNlcjE=",
                                    "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                                    "gravatar_id": "",
                                    "url": "https://api.github.com/users/other_user",
                                    "html_url": "https://github.com/other_user",
                                    "followers_url": "https://api.github.com/users/other_user/followers",
                                    "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                                    "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                                    "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                                    "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                                    "organizations_url": "https://api.github.com/users/other_user/orgs",
                                    "repos_url": "https://api.github.com/users/other_user/repos",
                                    "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                                    "received_events_url": "https://api.github.com/users/other_user/received_events",
                                    "type": "User",
                                    "site_admin": false
                                }
                            ],
                            "requested_teams": [
                                {
                                    "id": 1,
                                    "node_id": "MDQ6VGVhbTE=",
                                    "url": "https://api.github.com/teams/1",
                                    "name": "Justice League",
                                    "slug": "justice-league",
                                    "description": "A great team.",
                                    "privacy": "closed",
                                    "permission": "admin",
                                    "members_url": "https://api.github.com/teams/1/members{/member}",
                                    "repositories_url": "https://api.github.com/teams/1/repos",
                                    "parent": null
                                }
                            ],
                            "head": {
                                "label": "octocat:new-topic",
                                "ref": "new-topic",
                                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                                "user": {
                                    "login": "octocat",
                                    "id": 1,
                                    "node_id": "MDQ6VXNlcjE=",
                                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                    "gravatar_id": "",
                                    "url": "https://api.github.com/users/octocat",
                                    "html_url": "https://github.com/octocat",
                                    "followers_url": "https://api.github.com/users/octocat/followers",
                                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                                    "repos_url": "https://api.github.com/users/octocat/repos",
                                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                                    "type": "User",
                                    "site_admin": false
                                },
                                "repo": {
                                    "id": 1296269,
                                    "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                    "name": "Hello-World",
                                    "full_name": "octocat/Hello-World",
                                    "owner": {
                                        "login": "octocat",
                                        "id": 1,
                                        "node_id": "MDQ6VXNlcjE=",
                                        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                        "gravatar_id": "",
                                        "url": "https://api.github.com/users/octocat",
                                        "html_url": "https://github.com/octocat",
                                        "followers_url": "https://api.github.com/users/octocat/followers",
                                        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                        "organizations_url": "https://api.github.com/users/octocat/orgs",
                                        "repos_url": "https://api.github.com/users/octocat/repos",
                                        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                        "received_events_url": "https://api.github.com/users/octocat/received_events",
                                        "type": "User",
                                        "site_admin": false
                                    },
                                    "private": false,
                                    "html_url": "https://github.com/octocat/Hello-World",
                                    "description": "This your first repo!",
                                    "fork": false,
                                    "url": "https://api.github.com/repos/octocat/Hello-World",
                                    "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                    "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                    "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                    "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                    "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                    "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                    "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                    "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                    "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                    "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                    "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                    "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                    "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                                    "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                                    "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                    "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                    "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                    "git_url": "git:github.com/octocat/Hello-World.git",
                                    "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                    "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                    "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                    "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                    "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                    "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                                    "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                                    "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                    "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                    "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                    "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                    "ssh_url": "git@github.com:octocat/Hello-World.git",
                                    "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                    "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                    "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                    "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                    "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                                    "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                                    "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                    "clone_url": "https://github.com/octocat/Hello-World.git",
                                    "mirror_url": "git:git.example.com/octocat/Hello-World",
                                    "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                    "svn_url": "https://svn.github.com/octocat/Hello-World",
                                    "homepage": "https://github.com",
                                    "language": null,
                                    "forks_count": 9,
                                    "stargazers_count": 80,
                                    "watchers_count": 80,
                                    "size": 108,
                                    "default_branch": "master",
                                    "open_issues_count": 0,
                                    "is_template": true,
                                    "topics": [
                                        "octocat",
                                        "atom",
                                        "electron",
                                        "api"
                                    ],
                                    "has_issues": true,
                                    "has_projects": true,
                                    "has_wiki": true,
                                    "has_pages": false,
                                    "has_downloads": true,
                                    "archived": false,
                                    "disabled": false,
                                    "pushed_at": "2011-01-26T19:06:43Z",
                                    "created_at": "2011-01-26T19:01:12Z",
                                    "updated_at": "2011-01-26T19:14:43Z",
                                    "permissions": {
                                        "admin": false,
                                        "push": false,
                                        "pull": true
                                    },
                                    "allow_rebase_merge": true,
                                    "template_repository": null,
                                    "allow_squash_merge": true,
                                    "allow_merge_commit": true,
                                    "subscribers_count": 42,
                                    "network_count": 0
                                }
                            },
                            "base": {
                                "label": "octocat:master",
                                "ref": "master",
                                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
                                "user": {
                                    "login": "octocat",
                                    "id": 1,
                                    "node_id": "MDQ6VXNlcjE=",
                                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                    "gravatar_id": "",
                                    "url": "https://api.github.com/users/octocat",
                                    "html_url": "https://github.com/octocat",
                                    "followers_url": "https://api.github.com/users/octocat/followers",
                                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                                    "repos_url": "https://api.github.com/users/octocat/repos",
                                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                                    "type": "User",
                                    "site_admin": false
                                },
                                "repo": {
                                    "id": 1296269,
                                    "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                    "name": "Hello-World",
                                    "full_name": "octocat/Hello-World",
                                    "owner": {
                                        "login": "octocat",
                                        "id": 1,
                                        "node_id": "MDQ6VXNlcjE=",
                                        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                        "gravatar_id": "",
                                        "url": "https://api.github.com/users/octocat",
                                        "html_url": "https://github.com/octocat",
                                        "followers_url": "https://api.github.com/users/octocat/followers",
                                        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                        "organizations_url": "https://api.github.com/users/octocat/orgs",
                                        "repos_url": "https://api.github.com/users/octocat/repos",
                                        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                        "received_events_url": "https://api.github.com/users/octocat/received_events",
                                        "type": "User",
                                        "site_admin": false
                                    },
                                    "private": false,
                                    "html_url": "https://github.com/octocat/Hello-World",
                                    "description": "This your first repo!",
                                    "fork": false,
                                    "url": "https://api.github.com/repos/octocat/Hello-World",
                                    "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                    "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                    "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                    "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                    "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                    "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                    "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                    "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                    "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                    "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                    "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                    "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                    "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                                    "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                                    "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                    "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                    "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                    "git_url": "git:github.com/octocat/Hello-World.git",
                                    "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                    "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                    "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                    "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                    "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                    "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                                    "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                                    "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                    "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                    "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                    "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                    "ssh_url": "git@github.com:octocat/Hello-World.git",
                                    "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                    "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                    "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                    "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                    "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                                    "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                                    "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                    "clone_url": "https://github.com/octocat/Hello-World.git",
                                    "mirror_url": "git:git.example.com/octocat/Hello-World",
                                    "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                    "svn_url": "https://svn.github.com/octocat/Hello-World",
                                    "homepage": "https://github.com",
                                    "language": null,
                                    "forks_count": 9,
                                    "stargazers_count": 80,
                                    "watchers_count": 80,
                                    "size": 108,
                                    "default_branch": "master",
                                    "open_issues_count": 0,
                                    "is_template": true,
                                    "topics": [
                                        "octocat",
                                        "atom",
                                        "electron",
                                        "api"
                                    ],
                                    "has_issues": true,
                                    "has_projects": true,
                                    "has_wiki": true,
                                    "has_pages": false,
                                    "has_downloads": true,
                                    "archived": false,
                                    "disabled": false,
                                    "pushed_at": "2011-01-26T19:06:43Z",
                                    "created_at": "2011-01-26T19:01:12Z",
                                    "updated_at": "2011-01-26T19:14:43Z",
                                    "permissions": {
                                        "admin": false,
                                        "push": false,
                                        "pull": true
                                    },
                                    "allow_rebase_merge": true,
                                    "template_repository": null,
                                    "allow_squash_merge": true,
                                    "allow_merge_commit": true,
                                    "subscribers_count": 42,
                                    "network_count": 0
                                }
                            },
                            "_links": {
                                "self": {
                                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347"
                                },
                                "html": {
                                    "href": "https://github.com/octocat/Hello-World/pull/1347"
                                },
                                "issue": {
                                    "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347"
                                },
                                "comments": {
                                    "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments"
                                },
                                "review_comments": {
                                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments"
                                },
                                "review_comment": {
                                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}"
                                },
                                "commits": {
                                    "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits"
                                },
                                "statuses": {
                                    "href": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e"
                                }
                            },
                            "author_association": "OWNER",
                            "draft": false
                        }
                    ]
                }
            ],
            "idName": "list-pull-requests-associated-with-commit",
            "documentationUrl": "https://developer.github.com/v3/repos/commits/#list-pull-requests-associated-with-commit"
        },
        {
            "name": "Retrieve community profile metrics",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/repos/:owner/:repo/community/profile",
            "previews": [],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "This endpoint will return all community profile metrics, including an overall health score, repository description, the presence of documentation, detected code of conduct, detected license, and the presence of ISSUE\\_TEMPLATE, PULL\\_REQUEST\\_TEMPLATE, README, and CONTRIBUTING files.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "health_percentage": 100,
                        "description": "My first repository on GitHub!",
                        "documentation": true,
                        "files": {
                            "code_of_conduct": {
                                "name": "Contributor Covenant",
                                "key": "contributor_covenant",
                                "url": "https://api.github.com/codes_of_conduct/contributor_covenant",
                                "html_url": "https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md"
                            },
                            "contributing": {
                                "url": "https://api.github.com/repos/octocat/Hello-World/contents/CONTRIBUTING",
                                "html_url": "https://github.com/octocat/Hello-World/blob/master/CONTRIBUTING"
                            },
                            "issue_template": {
                                "url": "https://api.github.com/repos/octocat/Hello-World/contents/ISSUE_TEMPLATE",
                                "html_url": "https://github.com/octocat/Hello-World/blob/master/ISSUE_TEMPLATE"
                            },
                            "pull_request_template": {
                                "url": "https://api.github.com/repos/octocat/Hello-World/contents/PULL_REQUEST_TEMPLATE",
                                "html_url": "https://github.com/octocat/Hello-World/blob/master/PULL_REQUEST_TEMPLATE"
                            },
                            "license": {
                                "name": "MIT License",
                                "key": "mit",
                                "spdx_id": "MIT",
                                "url": "https://api.github.com/licenses/mit",
                                "html_url": "https://github.com/octocat/Hello-World/blob/master/LICENSE"
                            },
                            "readme": {
                                "url": "https://api.github.com/repos/octocat/Hello-World/contents/README.md",
                                "html_url": "https://github.com/octocat/Hello-World/blob/master/README.md"
                            }
                        },
                        "updated_at": "2017-02-28T19:09:29Z"
                    }
                }
            ],
            "idName": "retrieve-community-profile-metrics",
            "documentationUrl": "https://developer.github.com/v3/repos/community/#retrieve-community-profile-metrics"
        },
        {
            "name": "Enable a Pages site",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "POST",
            "path": "/repos/:owner/:repo/pages",
            "previews": [
                {
                    "name": "switcheroo",
                    "description": "**Note:** Enabling and disabling Pages in the Pages API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-03-14-enabling-disabling-pages/) preview for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.switcheroo-preview+json\n\n```",
                    "required": true
                },
                {
                    "name": "mister-fantastic",
                    "description": "**Note:** The GitHub Pages API contains two additional fields in responses, which developers can preview: `html_url` and `source`. To see these two new fields, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mister-fantastic-preview+json\n\n```",
                    "required": false
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "source",
                    "type": "object",
                    "description": "",
                    "required": false,
                    "location": "body"
                },
                {
                    "name": "source.branch",
                    "type": "string",
                    "description": "The repository branch used to publish your [site's source files](https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/). Can be either `master` or `gh-pages`.",
                    "required": false,
                    "enum": [
                        "master",
                        "gh-pages"
                    ],
                    "location": "body"
                },
                {
                    "name": "source.path",
                    "type": "string",
                    "description": "The repository directory that includes the source files for the Pages site. When `branch` is `master`, you can change `path` to `/docs`. When `branch` is `gh-pages`, you are unable to specify a `path` other than `/`.",
                    "required": false,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "source": {
                        "branch": "master",
                        "path": "/docs"
                    }
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "201 Created",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "url": "https://api.github.com/repos/github/developer.github.com/pages",
                        "status": "built",
                        "cname": "developer.github.com",
                        "custom_404": false,
                        "html_url": "https://developer.github.com",
                        "source": {
                            "branch": "master",
                            "directory": "/"
                        }
                    }
                }
            ],
            "idName": "enable-pages-site",
            "documentationUrl": "https://developer.github.com/v3/repos/pages/#enable-a-pages-site"
        },
        {
            "name": "Disable a Pages site",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/repos/:owner/:repo/pages",
            "previews": [
                {
                    "name": "switcheroo",
                    "description": "**Note:** Enabling and disabling Pages in the Pages API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-03-14-enabling-disabling-pages/) preview for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.switcheroo-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "disable-pages-site",
            "documentationUrl": "https://developer.github.com/v3/repos/pages/#disable-a-pages-site"
        },
        {
            "name": "List referrers",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/repos/:owner/:repo/traffic/popular/referrers",
            "previews": [],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Get the top 10 referrers over the last 14 days.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "referrer": "Google",
                            "count": 4,
                            "uniques": 3
                        },
                        {
                            "referrer": "stackoverflow.com",
                            "count": 2,
                            "uniques": 2
                        },
                        {
                            "referrer": "eggsonbread.com",
                            "count": 1,
                            "uniques": 1
                        },
                        {
                            "referrer": "yandex.ru",
                            "count": 1,
                            "uniques": 1
                        }
                    ]
                }
            ],
            "idName": "get-top-referrers",
            "documentationUrl": "https://developer.github.com/v3/repos/traffic/#list-referrers"
        },
        {
            "name": "List paths",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/repos/:owner/:repo/traffic/popular/paths",
            "previews": [],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Get the top 10 popular contents over the last 14 days.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "path": "/github/hubot",
                            "title": "github/hubot: A customizable life embetterment robot.",
                            "count": 3542,
                            "uniques": 2225
                        },
                        {
                            "path": "/github/hubot/blob/master/docs/scripting.md",
                            "title": "hubot/scripting.md at master · github/hubot · GitHub",
                            "count": 1707,
                            "uniques": 804
                        },
                        {
                            "path": "/github/hubot/tree/master/docs",
                            "title": "hubot/docs at master · github/hubot · GitHub",
                            "count": 685,
                            "uniques": 435
                        },
                        {
                            "path": "/github/hubot/tree/master/src",
                            "title": "hubot/src at master · github/hubot · GitHub",
                            "count": 577,
                            "uniques": 347
                        },
                        {
                            "path": "/github/hubot/blob/master/docs/index.md",
                            "title": "hubot/index.md at master · github/hubot · GitHub",
                            "count": 379,
                            "uniques": 259
                        },
                        {
                            "path": "/github/hubot/blob/master/docs/adapters.md",
                            "title": "hubot/adapters.md at master · github/hubot · GitHub",
                            "count": 354,
                            "uniques": 201
                        },
                        {
                            "path": "/github/hubot/tree/master/examples",
                            "title": "hubot/examples at master · github/hubot · GitHub",
                            "count": 340,
                            "uniques": 260
                        },
                        {
                            "path": "/github/hubot/blob/master/docs/deploying/heroku.md",
                            "title": "hubot/heroku.md at master · github/hubot · GitHub",
                            "count": 324,
                            "uniques": 217
                        },
                        {
                            "path": "/github/hubot/blob/master/src/robot.coffee",
                            "title": "hubot/robot.coffee at master · github/hubot · GitHub",
                            "count": 293,
                            "uniques": 191
                        },
                        {
                            "path": "/github/hubot/blob/master/LICENSE.md",
                            "title": "hubot/LICENSE.md at master · github/hubot · GitHub",
                            "count": 281,
                            "uniques": 222
                        }
                    ]
                }
            ],
            "idName": "get-top-paths",
            "documentationUrl": "https://developer.github.com/v3/repos/traffic/#list-paths"
        },
        {
            "name": "Views",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/repos/:owner/:repo/traffic/views",
            "previews": [],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "per",
                    "type": "string",
                    "description": "Must be one of: `day`, `week`.",
                    "default": "day",
                    "required": false,
                    "enum": [
                        "day",
                        "week"
                    ],
                    "location": "query"
                }
            ],
            "description": "Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "count": 14850,
                        "uniques": 3782,
                        "views": [
                            {
                                "timestamp": "2016-10-10T00:00:00Z",
                                "count": 440,
                                "uniques": 143
                            },
                            {
                                "timestamp": "2016-10-11T00:00:00Z",
                                "count": 1308,
                                "uniques": 414
                            },
                            {
                                "timestamp": "2016-10-12T00:00:00Z",
                                "count": 1486,
                                "uniques": 452
                            },
                            {
                                "timestamp": "2016-10-13T00:00:00Z",
                                "count": 1170,
                                "uniques": 401
                            },
                            {
                                "timestamp": "2016-10-14T00:00:00Z",
                                "count": 868,
                                "uniques": 266
                            },
                            {
                                "timestamp": "2016-10-15T00:00:00Z",
                                "count": 495,
                                "uniques": 157
                            },
                            {
                                "timestamp": "2016-10-16T00:00:00Z",
                                "count": 524,
                                "uniques": 175
                            },
                            {
                                "timestamp": "2016-10-17T00:00:00Z",
                                "count": 1263,
                                "uniques": 412
                            },
                            {
                                "timestamp": "2016-10-18T00:00:00Z",
                                "count": 1402,
                                "uniques": 417
                            },
                            {
                                "timestamp": "2016-10-19T00:00:00Z",
                                "count": 1394,
                                "uniques": 424
                            },
                            {
                                "timestamp": "2016-10-20T00:00:00Z",
                                "count": 1492,
                                "uniques": 448
                            },
                            {
                                "timestamp": "2016-10-21T00:00:00Z",
                                "count": 1153,
                                "uniques": 332
                            },
                            {
                                "timestamp": "2016-10-22T00:00:00Z",
                                "count": 566,
                                "uniques": 168
                            },
                            {
                                "timestamp": "2016-10-23T00:00:00Z",
                                "count": 675,
                                "uniques": 184
                            },
                            {
                                "timestamp": "2016-10-24T00:00:00Z",
                                "count": 614,
                                "uniques": 237
                            }
                        ]
                    }
                }
            ],
            "idName": "get-views",
            "documentationUrl": "https://developer.github.com/v3/repos/traffic/#views"
        },
        {
            "name": "Clones",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/repos/:owner/:repo/traffic/clones",
            "previews": [],
            "params": [
                {
                    "name": "owner",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "repo",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "per",
                    "type": "string",
                    "description": "Must be one of: `day`, `week`.",
                    "default": "day",
                    "required": false,
                    "enum": [
                        "day",
                        "week"
                    ],
                    "location": "query"
                }
            ],
            "description": "Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "count": 173,
                        "uniques": 128,
                        "clones": [
                            {
                                "timestamp": "2016-10-10T00:00:00Z",
                                "count": 2,
                                "uniques": 1
                            },
                            {
                                "timestamp": "2016-10-11T00:00:00Z",
                                "count": 17,
                                "uniques": 16
                            },
                            {
                                "timestamp": "2016-10-12T00:00:00Z",
                                "count": 21,
                                "uniques": 15
                            },
                            {
                                "timestamp": "2016-10-13T00:00:00Z",
                                "count": 8,
                                "uniques": 7
                            },
                            {
                                "timestamp": "2016-10-14T00:00:00Z",
                                "count": 5,
                                "uniques": 5
                            },
                            {
                                "timestamp": "2016-10-15T00:00:00Z",
                                "count": 2,
                                "uniques": 2
                            },
                            {
                                "timestamp": "2016-10-16T00:00:00Z",
                                "count": 8,
                                "uniques": 7
                            },
                            {
                                "timestamp": "2016-10-17T00:00:00Z",
                                "count": 26,
                                "uniques": 15
                            },
                            {
                                "timestamp": "2016-10-18T00:00:00Z",
                                "count": 19,
                                "uniques": 17
                            },
                            {
                                "timestamp": "2016-10-19T00:00:00Z",
                                "count": 19,
                                "uniques": 14
                            },
                            {
                                "timestamp": "2016-10-20T00:00:00Z",
                                "count": 19,
                                "uniques": 15
                            },
                            {
                                "timestamp": "2016-10-21T00:00:00Z",
                                "count": 9,
                                "uniques": 7
                            },
                            {
                                "timestamp": "2016-10-22T00:00:00Z",
                                "count": 5,
                                "uniques": 5
                            },
                            {
                                "timestamp": "2016-10-23T00:00:00Z",
                                "count": 6,
                                "uniques": 5
                            },
                            {
                                "timestamp": "2016-10-24T00:00:00Z",
                                "count": 7,
                                "uniques": 5
                            }
                        ]
                    }
                }
            ],
            "idName": "get-clones",
            "documentationUrl": "https://developer.github.com/v3/repos/traffic/#clones"
        }
    ],
    "scim": [
        {
            "name": "Get a list of provisioned identities",
            "enabledForApps": true,
            "githubCloudOnly": true,
            "method": "GET",
            "path": "/scim/v2/organizations/:org/Users",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "startIndex",
                    "type": "integer",
                    "description": "Used for pagination: the index of the first result to return.",
                    "required": false,
                    "location": "query"
                },
                {
                    "name": "count",
                    "type": "integer",
                    "description": "Used for pagination: the number of results to return.",
                    "required": false,
                    "location": "query"
                },
                {
                    "name": "filter",
                    "type": "string",
                    "description": "Filters results using the equals query parameter operator (`eq`). You can filter results that are equal to `id`, `userName`, `emails`, and `external_id`. For example, to search for an identity with the `userName` Octocat, you would use this query: `?filter=userName%20eq%20\\\"Octocat\\\"`.",
                    "required": false,
                    "location": "query"
                }
            ],
            "description": "To filter for a specific email address, use the `email` query parameter and the `eq` operator:\n\nYour filter would look like this cURL command:\n\nRetrieves users that match the filter. In the example, we searched only for [octocat@github.com](mailto:octocat@github.com).\n\nRetrieves a paginated list of all provisioned organization members, including pending invitations.",
            "idName": "list-provisioned-identities",
            "documentationUrl": "https://developer.github.com/v3/scim/#get-a-list-of-provisioned-identities"
        },
        {
            "name": "Get provisioning details for a single user",
            "enabledForApps": true,
            "githubCloudOnly": true,
            "method": "GET",
            "path": "/scim/v2/organizations/:org/Users/:scim_user_id",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "scim_user_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "external_identity_guid",
                    "type": "integer",
                    "required": false,
                    "description": "",
                    "location": "url",
                    "deprecated": {
                        "date": "2019-04-10",
                        "message": "\"external_identity_guid\" parameter renamed to \"scim_user_id\"",
                        "before": {
                            "name": "external_identity_guid"
                        },
                        "after": {
                            "name": "scim_user_id"
                        }
                    }
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "id": "edefdfedf-050c-11e7-8d32",
                        "externalId": "a7d0f98382",
                        "userName": "mona.octocat@okta.example.com",
                        "name": {
                            "givenName": "Mona",
                            "familyName": "Octocat"
                        },
                        "emails": [
                            {
                                "value": "mona.octocat@okta.example.com",
                                "type": "work",
                                "primary": true
                            }
                        ],
                        "active": true,
                        "meta": {
                            "resourceType": "User",
                            "created": "2017-03-09T16:11:13-05:00",
                            "lastModified": "2017-03-09T16:11:13-05:00",
                            "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
                        }
                    }
                }
            ],
            "idName": "get-provisioning-details-for-user",
            "documentationUrl": "https://developer.github.com/v3/scim/#get-provisioning-details-for-a-single-user"
        },
        {
            "name": "Provision and invite users",
            "enabledForApps": true,
            "githubCloudOnly": true,
            "method": "POST",
            "path": "/scim/v2/organizations/:org/Users",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "requests": [
                {
                    "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:User"
                    ],
                    "userName": "mona.octocat@okta.example.com",
                    "name": {
                        "familyName": "Octocat",
                        "givenName": "Mona"
                    },
                    "emails": [
                        {
                            "value": "mona.octocat@okta.example.com",
                            "type": "work",
                            "primary": true
                        }
                    ]
                }
            ],
            "description": "Provision organization membership for a user, and send an activation email to the email address.\n\nAs shown in the following example, you must at least provide the required values for the user: `userName`, `name`, and `emails`.",
            "responses": [
                {
                    "headers": {
                        "status": "201 Created",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "id": "edefdfedf-050c-11e7-8d32",
                        "externalId": "a7d0f98382",
                        "userName": "mona.octocat@okta.example.com",
                        "name": {
                            "givenName": "Mona",
                            "familyName": "Octocat"
                        },
                        "emails": [
                            {
                                "value": "mona.octocat@okta.example.com",
                                "type": "work",
                                "primary": true
                            }
                        ],
                        "active": true,
                        "meta": {
                            "resourceType": "User",
                            "created": "2017-03-09T16:11:13-05:00",
                            "lastModified": "2017-03-09T16:11:13-05:00",
                            "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
                        }
                    }
                }
            ],
            "idName": "provision-and-invite-users",
            "documentationUrl": "https://developer.github.com/v3/scim/#provision-and-invite-users"
        },
        {
            "name": "Provision and invite users",
            "enabledForApps": true,
            "githubCloudOnly": true,
            "method": "POST",
            "path": "/scim/v2/organizations/:org/Users",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "requests": [
                {
                    "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:User"
                    ],
                    "userName": "mona.octocat@okta.example.com",
                    "name": {
                        "familyName": "Octocat",
                        "givenName": "Mona"
                    },
                    "emails": [
                        {
                            "value": "mona.octocat@okta.example.com",
                            "type": "work",
                            "primary": true
                        }
                    ]
                }
            ],
            "description": "Provision organization membership for a user, and send an activation email to the email address.\n\nAs shown in the following example, you must at least provide the required values for the user: `userName`, `name`, and `emails`.",
            "responses": [
                {
                    "headers": {
                        "status": "201 Created",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "id": "edefdfedf-050c-11e7-8d32",
                        "externalId": "a7d0f98382",
                        "userName": "mona.octocat@okta.example.com",
                        "name": {
                            "givenName": "Mona",
                            "familyName": "Octocat"
                        },
                        "emails": [
                            {
                                "value": "mona.octocat@okta.example.com",
                                "type": "work",
                                "primary": true
                            }
                        ],
                        "active": true,
                        "meta": {
                            "resourceType": "User",
                            "created": "2017-03-09T16:11:13-05:00",
                            "lastModified": "2017-03-09T16:11:13-05:00",
                            "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
                        }
                    }
                }
            ],
            "idName": "provision-invite-users",
            "documentationUrl": "https://developer.github.com/v3/scim/#provision-and-invite-users",
            "deprecated": {
                "date": "2018-12-27",
                "message": "`idName` changed for \"Provision and invite users\". It now includes `-and-`",
                "before": {
                    "idName": "provision-invite-users"
                },
                "after": {
                    "idName": "provision-and-invite-users"
                }
            }
        },
        {
            "name": "Replace a provisioned user's information",
            "enabledForApps": true,
            "githubCloudOnly": true,
            "method": "PUT",
            "path": "/scim/v2/organizations/:org/Users/:scim_user_id",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "scim_user_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "external_identity_guid",
                    "type": "integer",
                    "required": false,
                    "description": "",
                    "location": "url",
                    "deprecated": {
                        "date": "2019-04-10",
                        "message": "\"external_identity_guid\" parameter renamed to \"scim_user_id\"",
                        "before": {
                            "name": "external_identity_guid"
                        },
                        "after": {
                            "name": "scim_user_id"
                        }
                    }
                }
            ],
            "requests": [
                {
                    "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:User"
                    ],
                    "userName": "mona.octocat@okta.example.com",
                    "name": {
                        "familyName": "Octocat",
                        "givenName": "Mona"
                    },
                    "emails": [
                        {
                            "value": "mona.octocat@okta.example.com",
                            "type": "work",
                            "primary": true
                        }
                    ]
                }
            ],
            "description": "Replaces an existing provisioned user's information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update a user attribute](https://developer.github.com/v3/scim/#update-a-user-attribute) endpoint instead.\n\nAs shown in the following example, you must at least provide the required values for the user: `userName`, `name`, and `emails`.\n\n**Warning:** Setting `active: false` removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "id": "edefdfedf-050c-11e7-8d32",
                        "externalId": "a7d0f98382",
                        "userName": "mona.octocat@okta.example.com",
                        "name": {
                            "givenName": "Mona",
                            "familyName": "Octocat"
                        },
                        "emails": [
                            {
                                "value": "mona.octocat@okta.example.com",
                                "type": "work",
                                "primary": true
                            }
                        ],
                        "active": true,
                        "meta": {
                            "resourceType": "User",
                            "created": "2017-03-09T16:11:13-05:00",
                            "lastModified": "2017-03-09T16:11:13-05:00",
                            "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
                        }
                    }
                }
            ],
            "idName": "replace-provisioned-user-information",
            "documentationUrl": "https://developer.github.com/v3/scim/#replace-a-provisioned-users-information"
        },
        {
            "name": "Update a provisioned organization membership",
            "enabledForApps": true,
            "githubCloudOnly": true,
            "method": "PUT",
            "path": "/scim/v2/organizations/:org/Users/:scim_user_id",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "scim_user_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "external_identity_guid",
                    "type": "integer",
                    "required": false,
                    "description": "",
                    "location": "url",
                    "deprecated": {
                        "date": "2019-04-10",
                        "message": "\"external_identity_guid\" parameter renamed to \"scim_user_id\"",
                        "before": {
                            "name": "external_identity_guid"
                        },
                        "after": {
                            "name": "scim_user_id"
                        }
                    }
                }
            ],
            "requests": [
                {
                    "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:User"
                    ],
                    "userName": "mona.octocat@okta.example.com",
                    "name": {
                        "familyName": "Octocat",
                        "givenName": "Mona"
                    },
                    "emails": [
                        {
                            "value": "mona.octocat@okta.example.com",
                            "type": "work",
                            "primary": true
                        }
                    ]
                }
            ],
            "description": "Replaces an existing provisioned user's information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update a user attribute](https://developer.github.com/v3/scim/#update-a-user-attribute) endpoint instead.\n\nAs shown in the following example, you must at least provide the required values for the user: `userName`, `name`, and `emails`.\n\n**Warning:** Setting `active: false` removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "id": "edefdfedf-050c-11e7-8d32",
                        "externalId": "a7d0f98382",
                        "userName": "mona.octocat@okta.example.com",
                        "name": {
                            "givenName": "Mona",
                            "familyName": "Octocat"
                        },
                        "emails": [
                            {
                                "value": "mona.octocat@okta.example.com",
                                "type": "work",
                                "primary": true
                            }
                        ],
                        "active": true,
                        "meta": {
                            "resourceType": "User",
                            "created": "2017-03-09T16:11:13-05:00",
                            "lastModified": "2017-03-09T16:11:13-05:00",
                            "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
                        }
                    }
                }
            ],
            "idName": "update-provisioned-org-membership",
            "documentationUrl": "https://developer.github.com/v3/scim/#replace-a-provisioned-users-information",
            "deprecated": {
                "date": "2019-04-10",
                "message": "\"Update a provisioned organization membership\" renamed to \"Replace a provisioned user's information\"",
                "before": {
                    "idName": "update-provisioned-org-membership"
                },
                "after": {
                    "idName": "replace-provisioned-user-information"
                }
            }
        },
        {
            "name": "Update a user attribute",
            "enabledForApps": true,
            "githubCloudOnly": true,
            "method": "PATCH",
            "path": "/scim/v2/organizations/:org/Users/:scim_user_id",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "scim_user_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "external_identity_guid",
                    "type": "integer",
                    "required": false,
                    "description": "",
                    "location": "url",
                    "deprecated": {
                        "date": "2019-04-10",
                        "message": "\"external_identity_guid\" parameter renamed to \"scim_user_id\"",
                        "before": {
                            "name": "external_identity_guid"
                        },
                        "after": {
                            "name": "scim_user_id"
                        }
                    }
                }
            ],
            "requests": [
                {
                    "schemas": [
                        "urn:ietf:params:scim:api:messages:2.0:PatchOp"
                    ],
                    "Operations": [
                        {
                            "op": "add",
                            "path": "emails",
                            "value": [
                                {
                                    "value": "monalisa@octocat.github.com",
                                    "type": "home"
                                }
                            ]
                        },
                        {
                            "op": "replace",
                            "path": "name.givenName",
                            "value": "Monalisa"
                        }
                    ]
                }
            ],
            "description": "Allows you to change a provisioned user's individual attributes. To change a user's values, you must provide a specific `Operations` JSON format that contains at least one of the `add`, `remove`, or `replace` operations.\n\nThe following example shows adding a new email address and updating the user's given name. For other examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).\n\n**Note:** Complicated SCIM `path` selectors that include filters are not supported. For example, a `path` selector defined as `\"path\": \"emails[type eq \\\"work\\\"]\"` will not work.\n\n**Warning:** If you set `active:false` using the `replace` operation (as shown in the JSON example below), it removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.\n\n```\n{\n  \"Operations\":[{\n    \"op\":\"replace\",\n    \"value\":{\n      \"active\":false\n    }\n  }]\n}\n\n```",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "id": "edefdfedf-050c-11e7-8d32",
                        "externalId": "a7d0f98382",
                        "userName": "mona.octocat@okta.example.com",
                        "name": {
                            "givenName": "Monalisa",
                            "familyName": "Octocat"
                        },
                        "emails": [
                            {
                                "value": "mona.octocat@okta.example.com",
                                "type": "work",
                                "primary": true
                            },
                            {
                                "value": "monalisa@octocat.github.com",
                                "type": "home"
                            }
                        ],
                        "active": true,
                        "meta": {
                            "resourceType": "User",
                            "created": "2017-03-09T16:11:13-05:00",
                            "lastModified": "2017-03-09T16:11:13-05:00",
                            "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32"
                        }
                    }
                }
            ],
            "idName": "update-user-attribute",
            "documentationUrl": "https://developer.github.com/v3/scim/#update-a-user-attribute"
        },
        {
            "name": "Remove a user from the organization",
            "enabledForApps": true,
            "githubCloudOnly": true,
            "method": "DELETE",
            "path": "/scim/v2/organizations/:org/Users/:scim_user_id",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "scim_user_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "external_identity_guid",
                    "type": "integer",
                    "required": false,
                    "description": "",
                    "location": "url",
                    "deprecated": {
                        "date": "2019-04-10",
                        "message": "\"external_identity_guid\" parameter renamed to \"scim_user_id\"",
                        "before": {
                            "name": "external_identity_guid"
                        },
                        "after": {
                            "name": "scim_user_id"
                        }
                    }
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "remove-user-from-org",
            "documentationUrl": "https://developer.github.com/v3/scim/#remove-a-user-from-the-organization"
        }
    ],
    "teams": [
        {
            "name": "Get team by name",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/orgs/:org/teams/:team_slug",
            "previews": [],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "team_slug",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Gets a team using the team's `slug`. GitHub generates the `slug` from the team `name`.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "id": 1,
                        "node_id": "MDQ6VGVhbTE=",
                        "url": "https://api.github.com/teams/1",
                        "name": "Justice League",
                        "slug": "justice-league",
                        "description": "A great team.",
                        "privacy": "closed",
                        "permission": "admin",
                        "members_url": "https://api.github.com/teams/1/members{/member}",
                        "repositories_url": "https://api.github.com/teams/1/repos",
                        "parent": null,
                        "members_count": 3,
                        "repos_count": 10,
                        "created_at": "2017-07-14T16:53:42Z",
                        "updated_at": "2017-08-17T12:37:15Z",
                        "organization": {
                            "login": "github",
                            "id": 1,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                            "url": "https://api.github.com/orgs/github",
                            "repos_url": "https://api.github.com/orgs/github/repos",
                            "events_url": "https://api.github.com/orgs/github/events",
                            "hooks_url": "https://api.github.com/orgs/github/hooks",
                            "issues_url": "https://api.github.com/orgs/github/issues",
                            "members_url": "https://api.github.com/orgs/github/members{/member}",
                            "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "description": "A great organization",
                            "name": "github",
                            "company": "GitHub",
                            "blog": "https://github.com/blog",
                            "location": "San Francisco",
                            "email": "octocat@github.com",
                            "is_verified": true,
                            "has_organization_projects": true,
                            "has_repository_projects": true,
                            "public_repos": 2,
                            "public_gists": 1,
                            "followers": 20,
                            "following": 0,
                            "html_url": "https://github.com/octocat",
                            "created_at": "2008-01-14T04:33:35Z",
                            "type": "Organization"
                        }
                    }
                }
            ],
            "idName": "get-by-name",
            "documentationUrl": "https://developer.github.com/v3/teams/#get-team-by-name"
        },
        {
            "name": "List pending team invitations",
            "enabledForApps": true,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/teams/:team_id/invitations",
            "previews": [
                {
                    "name": "dazzler",
                    "description": "**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dazzler-preview+json\n\n```",
                    "required": false
                }
            ],
            "params": [
                {
                    "name": "team_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "id": 1,
                            "login": "monalisa",
                            "email": "octocat@github.com",
                            "role": "direct_member",
                            "created_at": "2016-11-30T06:46:10-08:00",
                            "inviter": {
                                "login": "other_user",
                                "id": 1,
                                "node_id": "MDQ6VXNlcjE=",
                                "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                                "gravatar_id": "",
                                "url": "https://api.github.com/users/other_user",
                                "html_url": "https://github.com/other_user",
                                "followers_url": "https://api.github.com/users/other_user/followers",
                                "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                                "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                                "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                                "organizations_url": "https://api.github.com/users/other_user/orgs",
                                "repos_url": "https://api.github.com/users/other_user/repos",
                                "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                                "received_events_url": "https://api.github.com/users/other_user/received_events",
                                "type": "User",
                                "site_admin": false
                            },
                            "team_count": 2,
                            "invitation_team_url": "https://api.github.com/organizations/2/invitations/1/teams"
                        }
                    ]
                }
            ],
            "idName": "list-pending-invitations",
            "documentationUrl": "https://developer.github.com/v3/teams/members/#list-pending-team-invitations"
        },
        {
            "name": "List IdP groups in an organization",
            "enabledForApps": false,
            "githubCloudOnly": true,
            "method": "GET",
            "path": "/orgs/:org/team-sync/groups",
            "previews": [
                {
                    "name": "team-sync",
                    "description": "**Note:** Configuring connections between GitHub teams and IdP groups in the [Team Synchronization API](https://developer.github.com/v3/teams/team_sync/) is currently available for developers to preview. To access this new API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.team-sync-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "org",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "per_page",
                    "type": "integer",
                    "required": false,
                    "description": "Results per page (max 100)",
                    "default": 30,
                    "location": "query"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "required": false,
                    "description": "Page number of the results to fetch.",
                    "default": 1,
                    "location": "query"
                }
            ],
            "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/articles/github-s-products) in the GitHub Help documentation.\n\nList IdP groups available in an organization.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "groups": [
                            {
                                "group_id": "123",
                                "group_name": "Octocat admins",
                                "group_description": "The people who configure your octoworld."
                            },
                            {
                                "group_id": "456",
                                "group_name": "Octocat docs members",
                                "group_description": "The people who make your octoworld come to life."
                            }
                        ]
                    }
                }
            ],
            "idName": "list-id-p-groups-for-org",
            "documentationUrl": "https://developer.github.com/v3/teams/team_sync/#list-idp-groups-in-an-organization"
        },
        {
            "name": "List IdP groups for a team",
            "enabledForApps": false,
            "githubCloudOnly": true,
            "method": "GET",
            "path": "/teams/:team_id/team-sync/group-mappings",
            "previews": [
                {
                    "name": "team-sync",
                    "description": "**Note:** Configuring connections between GitHub teams and IdP groups in the [Team Synchronization API](https://developer.github.com/v3/teams/team_sync/) is currently available for developers to preview. To access this new API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.team-sync-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "team_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/articles/github-s-products) in the GitHub Help documentation.\n\nList IdP groups connected to a team on GitHub.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "groups": [
                            {
                                "group_id": "123",
                                "group_name": "Octocat admins",
                                "group_description": "The people who configure your octoworld."
                            },
                            {
                                "group_id": "456",
                                "group_name": "Octocat docs members",
                                "group_description": "The people who make your octoworld come to life."
                            }
                        ]
                    }
                }
            ],
            "idName": "list-id-p-groups",
            "documentationUrl": "https://developer.github.com/v3/teams/team_sync/#list-idp-groups-for-a-team"
        },
        {
            "name": "Create or update IdP group connections",
            "enabledForApps": false,
            "githubCloudOnly": true,
            "method": "PATCH",
            "path": "/teams/:team_id/team-sync/group-mappings",
            "previews": [
                {
                    "name": "team-sync",
                    "description": "**Note:** Configuring connections between GitHub teams and IdP groups in the [Team Synchronization API](https://developer.github.com/v3/teams/team_sync/) is currently available for developers to preview. To access this new API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.team-sync-preview+json\n\n```",
                    "required": true
                }
            ],
            "params": [
                {
                    "name": "team_id",
                    "type": "integer",
                    "required": true,
                    "description": "",
                    "location": "url"
                },
                {
                    "name": "groups",
                    "type": "object[]",
                    "description": "The IdP groups you want to connect to a GitHub team. When updating, the new `groups` object will replace the original one. You must include any existing groups that you don't want to remove.",
                    "required": true,
                    "location": "body"
                },
                {
                    "name": "groups[].group_id",
                    "type": "string",
                    "description": "ID of the IdP group.",
                    "required": true,
                    "location": "body"
                },
                {
                    "name": "groups[].group_name",
                    "type": "string",
                    "description": "Name of the IdP group.",
                    "required": true,
                    "location": "body"
                },
                {
                    "name": "groups[].group_description",
                    "type": "string",
                    "description": "Description of the IdP group.",
                    "required": true,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "groups": [
                        {
                            "group_id": "123",
                            "group_name": "Octocat admins",
                            "description": "The people who configure your octoworld."
                        }
                    ]
                }
            ],
            "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/articles/github-s-products) in the GitHub Help documentation.\n\nCreates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": {
                        "groups": [
                            {
                                "group_id": "123",
                                "group_name": "Octocat admins",
                                "group_description": "The people who configure your octoworld."
                            }
                        ]
                    }
                }
            ],
            "idName": "create-or-update-id-p-group-connections",
            "documentationUrl": "https://developer.github.com/v3/teams/team_sync/#create-or-update-idp-group-connections"
        }
    ],
    "users": [
        {
            "name": "List blocked users",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/user/blocks",
            "previews": [],
            "params": [],
            "description": "List the users you've blocked on your personal account.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "login": "octocat",
                            "id": 1,
                            "node_id": "MDQ6VXNlcjE=",
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/octocat",
                            "html_url": "https://github.com/octocat",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "type": "User",
                            "site_admin": false
                        }
                    ]
                }
            ],
            "idName": "list-blocked",
            "documentationUrl": "https://developer.github.com/v3/users/blocking/#list-blocked-users"
        },
        {
            "name": "Check whether you've blocked a user",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "GET",
            "path": "/user/blocks/:username",
            "previews": [],
            "params": [
                {
                    "name": "username",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "If the user is blocked:\n\nIf the user is not blocked:",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "description": "If the user is blocked:"
                },
                {
                    "headers": {
                        "status": "404 Not Found",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "description": "If the user is not blocked:"
                }
            ],
            "idName": "check-blocked",
            "documentationUrl": "https://developer.github.com/v3/users/blocking/#check-whether-youve-blocked-a-user"
        },
        {
            "name": "Block a user",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "PUT",
            "path": "/user/blocks/:username",
            "previews": [],
            "params": [
                {
                    "name": "username",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "block",
            "documentationUrl": "https://developer.github.com/v3/users/blocking/#block-a-user"
        },
        {
            "name": "Unblock a user",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "DELETE",
            "path": "/user/blocks/:username",
            "previews": [],
            "params": [
                {
                    "name": "username",
                    "type": "string",
                    "required": true,
                    "description": "",
                    "location": "url"
                }
            ],
            "description": "",
            "responses": [
                {
                    "headers": {
                        "status": "204 No Content",
                        "content-type": "application/json; charset=utf-8"
                    }
                }
            ],
            "idName": "unblock",
            "documentationUrl": "https://developer.github.com/v3/users/blocking/#unblock-a-user"
        },
        {
            "name": "Toggle primary email visibility",
            "enabledForApps": false,
            "githubCloudOnly": false,
            "method": "PATCH",
            "path": "/user/email/visibility",
            "previews": [],
            "params": [
                {
                    "name": "email",
                    "type": "string",
                    "description": "Specify the _primary_ email address that needs a visibility change.",
                    "required": true,
                    "location": "body"
                },
                {
                    "name": "visibility",
                    "type": "string",
                    "description": "Use `public` to enable an authenticated user to view the specified email address, or use `private` so this primary email address cannot be seen publicly.",
                    "required": true,
                    "location": "body"
                }
            ],
            "requests": [
                {
                    "email": "octocat@github.com",
                    "visibility": "public"
                }
            ],
            "description": "Sets the visibility for your primary email addresses.",
            "responses": [
                {
                    "headers": {
                        "status": "200 OK",
                        "content-type": "application/json; charset=utf-8"
                    },
                    "body": [
                        {
                            "email": "octocat@github.com",
                            "primary": true,
                            "verified": true,
                            "visibility": "private"
                        }
                    ]
                }
            ],
            "idName": "toggle-primary-email-visibility",
            "documentationUrl": "https://developer.github.com/v3/users/emails/#toggle-primary-email-visibility"
        }
    ]
}
